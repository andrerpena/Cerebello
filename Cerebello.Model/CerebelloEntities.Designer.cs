//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Address_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Person), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Address), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Appointment_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Appointment_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.User), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Patient_Coverage", "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.Coverage), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Patient), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Laboratory_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "Laboratory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Laboratory), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Patient_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Patient), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Email_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Person), "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Email), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Patient_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Person), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Patient), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Receipt_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Patient), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Receipt), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Phone_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Person), "Phone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Phone), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_User_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Person), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.User), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Practice_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.User), "Practice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Practice), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ReceiptMedicine_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Receipt), "ReceiptMedicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ReceiptMedicine), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ActiveIngredient_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "ActiveIngredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ActiveIngredient), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Medicine_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Medicine), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Medicine_MedicineLaboratory", "Laboratory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.Laboratory), "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Medicine), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "MedicineActiveIngredient", "ActiveIngredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ActiveIngredient), "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Medicine))]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ReceiptMedicine_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Medicine), "ReceiptMedicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ReceiptMedicine), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Anamnese_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Patient), "Anamnese", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Anamnese), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_SYS_Medicine_SYS_Laboratory", "SYS_Laboratory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.SYS_Laboratory), "SYS_Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.SYS_Medicine), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "SYS_MedicineActiveIngredient", "SYS_ActiveIngredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.SYS_ActiveIngredient), "SYS_Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.SYS_Medicine))]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Appointment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Patient), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_CFG_Schedule_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "CFG_Schedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.CFG_Schedule), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "SYS_MedicineLeaflet", "SYS_Leaflet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.SYS_Leaflet), "SYS_Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.SYS_Medicine))]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "MedicineLeaflet", "Leaflet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Leaflet), "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Medicine))]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_CFG_Documents_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "CFG_Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.CFG_Documents), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.ModelMedicalCertificate), "ModelMedicalCertificateField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ModelMedicalCertificateField), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ModelMedicalCertificate_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Doctor), "ModelMedicalCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ModelMedicalCertificate), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_MedicalCertificate_ModelMedicalCertificate", "ModelMedicalCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.ModelMedicalCertificate), "MedicalCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.MedicalCertificate), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_MedicalCertificate_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Patient), "MedicalCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.MedicalCertificate), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.MedicalCertificate), "MedicalCertificateField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.MedicalCertificateField), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Diagnosis_Anamnese", "Anamnese", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Anamnese), "Diagnosi", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Diagnosis), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_User_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.Doctor), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.User), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_User_Practice", "Practice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Practice), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.User), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_User_Secretary", "Secretary", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.Secretary), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.User), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_User_Administrator", "Administrator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cerebello.Model.Administrator), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.User), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Doctor_MedicalEntity1", "SYS_MedicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.SYS_MedicalEntity), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Doctor), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_Doctor_MedicalSpecialty1", "SYS_MedicalSpecialty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.SYS_MedicalSpecialty), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.Doctor), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ExaminationRequest_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Patient), "ExaminationRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ExaminationRequest), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ExaminationResult_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.Patient), "ExaminationResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ExaminationResult), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ExaminationRequest_SYS_MedicalProcedures11", "SYS_MedicalProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.SYS_MedicalProcedure), "ExaminationRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ExaminationRequest), true)]
[assembly: EdmRelationshipAttribute("Cerebello.Model", "FK_ExaminationResult_SYS_MedicalProcedures1", "SYS_MedicalProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cerebello.Model.SYS_MedicalProcedure), "ExaminationResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cerebello.Model.ExaminationResult), true)]

#endregion

namespace Cerebello.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CerebelloEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CerebelloEntities object using the connection string found in the 'CerebelloEntities' section of the application configuration file.
        /// </summary>
        public CerebelloEntities() : base("name=CerebelloEntities", "CerebelloEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CerebelloEntities object.
        /// </summary>
        public CerebelloEntities(string connectionString) : base(connectionString, "CerebelloEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CerebelloEntities object.
        /// </summary>
        public CerebelloEntities(EntityConnection connection) : base(connection, "CerebelloEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coverage> Coverages
        {
            get
            {
                if ((_Coverages == null))
                {
                    _Coverages = base.CreateObjectSet<Coverage>("Coverages");
                }
                return _Coverages;
            }
        }
        private ObjectSet<Coverage> _Coverages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Email> Emails
        {
            get
            {
                if ((_Emails == null))
                {
                    _Emails = base.CreateObjectSet<Email>("Emails");
                }
                return _Emails;
            }
        }
        private ObjectSet<Email> _Emails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Laboratory> Laboratories
        {
            get
            {
                if ((_Laboratories == null))
                {
                    _Laboratories = base.CreateObjectSet<Laboratory>("Laboratories");
                }
                return _Laboratories;
            }
        }
        private ObjectSet<Laboratory> _Laboratories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Phone> Phones
        {
            get
            {
                if ((_Phones == null))
                {
                    _Phones = base.CreateObjectSet<Phone>("Phones");
                }
                return _Phones;
            }
        }
        private ObjectSet<Phone> _Phones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Practice> Practices
        {
            get
            {
                if ((_Practices == null))
                {
                    _Practices = base.CreateObjectSet<Practice>("Practices");
                }
                return _Practices;
            }
        }
        private ObjectSet<Practice> _Practices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receipt> Receipts
        {
            get
            {
                if ((_Receipts == null))
                {
                    _Receipts = base.CreateObjectSet<Receipt>("Receipts");
                }
                return _Receipts;
            }
        }
        private ObjectSet<Receipt> _Receipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptMedicine> ReceiptMedicines
        {
            get
            {
                if ((_ReceiptMedicines == null))
                {
                    _ReceiptMedicines = base.CreateObjectSet<ReceiptMedicine>("ReceiptMedicines");
                }
                return _ReceiptMedicines;
            }
        }
        private ObjectSet<ReceiptMedicine> _ReceiptMedicines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Secretary> Secretaries
        {
            get
            {
                if ((_Secretaries == null))
                {
                    _Secretaries = base.CreateObjectSet<Secretary>("Secretaries");
                }
                return _Secretaries;
            }
        }
        private ObjectSet<Secretary> _Secretaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActiveIngredient> ActiveIngredients
        {
            get
            {
                if ((_ActiveIngredients == null))
                {
                    _ActiveIngredients = base.CreateObjectSet<ActiveIngredient>("ActiveIngredients");
                }
                return _ActiveIngredients;
            }
        }
        private ObjectSet<ActiveIngredient> _ActiveIngredients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medicine> Medicines
        {
            get
            {
                if ((_Medicines == null))
                {
                    _Medicines = base.CreateObjectSet<Medicine>("Medicines");
                }
                return _Medicines;
            }
        }
        private ObjectSet<Medicine> _Medicines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Anamnese> Anamnese
        {
            get
            {
                if ((_Anamnese == null))
                {
                    _Anamnese = base.CreateObjectSet<Anamnese>("Anamnese");
                }
                return _Anamnese;
            }
        }
        private ObjectSet<Anamnese> _Anamnese;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_ActiveIngredient> SYS_ActiveIngredient
        {
            get
            {
                if ((_SYS_ActiveIngredient == null))
                {
                    _SYS_ActiveIngredient = base.CreateObjectSet<SYS_ActiveIngredient>("SYS_ActiveIngredient");
                }
                return _SYS_ActiveIngredient;
            }
        }
        private ObjectSet<SYS_ActiveIngredient> _SYS_ActiveIngredient;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_Laboratory> SYS_Laboratory
        {
            get
            {
                if ((_SYS_Laboratory == null))
                {
                    _SYS_Laboratory = base.CreateObjectSet<SYS_Laboratory>("SYS_Laboratory");
                }
                return _SYS_Laboratory;
            }
        }
        private ObjectSet<SYS_Laboratory> _SYS_Laboratory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_Medicine> SYS_Medicine
        {
            get
            {
                if ((_SYS_Medicine == null))
                {
                    _SYS_Medicine = base.CreateObjectSet<SYS_Medicine>("SYS_Medicine");
                }
                return _SYS_Medicine;
            }
        }
        private ObjectSet<SYS_Medicine> _SYS_Medicine;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CFG_Schedule> CFG_Schedule
        {
            get
            {
                if ((_CFG_Schedule == null))
                {
                    _CFG_Schedule = base.CreateObjectSet<CFG_Schedule>("CFG_Schedule");
                }
                return _CFG_Schedule;
            }
        }
        private ObjectSet<CFG_Schedule> _CFG_Schedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_Leaflet> SYS_Leaflet
        {
            get
            {
                if ((_SYS_Leaflet == null))
                {
                    _SYS_Leaflet = base.CreateObjectSet<SYS_Leaflet>("SYS_Leaflet");
                }
                return _SYS_Leaflet;
            }
        }
        private ObjectSet<SYS_Leaflet> _SYS_Leaflet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Leaflet> Leaflets
        {
            get
            {
                if ((_Leaflets == null))
                {
                    _Leaflets = base.CreateObjectSet<Leaflet>("Leaflets");
                }
                return _Leaflets;
            }
        }
        private ObjectSet<Leaflet> _Leaflets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CFG_Documents> CFG_Documents
        {
            get
            {
                if ((_CFG_Documents == null))
                {
                    _CFG_Documents = base.CreateObjectSet<CFG_Documents>("CFG_Documents");
                }
                return _CFG_Documents;
            }
        }
        private ObjectSet<CFG_Documents> _CFG_Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModelMedicalCertificate> ModelMedicalCertificates
        {
            get
            {
                if ((_ModelMedicalCertificates == null))
                {
                    _ModelMedicalCertificates = base.CreateObjectSet<ModelMedicalCertificate>("ModelMedicalCertificates");
                }
                return _ModelMedicalCertificates;
            }
        }
        private ObjectSet<ModelMedicalCertificate> _ModelMedicalCertificates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModelMedicalCertificateField> ModelMedicalCertificateFields
        {
            get
            {
                if ((_ModelMedicalCertificateFields == null))
                {
                    _ModelMedicalCertificateFields = base.CreateObjectSet<ModelMedicalCertificateField>("ModelMedicalCertificateFields");
                }
                return _ModelMedicalCertificateFields;
            }
        }
        private ObjectSet<ModelMedicalCertificateField> _ModelMedicalCertificateFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalCertificate> MedicalCertificates
        {
            get
            {
                if ((_MedicalCertificates == null))
                {
                    _MedicalCertificates = base.CreateObjectSet<MedicalCertificate>("MedicalCertificates");
                }
                return _MedicalCertificates;
            }
        }
        private ObjectSet<MedicalCertificate> _MedicalCertificates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalCertificateField> MedicalCertificateFields
        {
            get
            {
                if ((_MedicalCertificateFields == null))
                {
                    _MedicalCertificateFields = base.CreateObjectSet<MedicalCertificateField>("MedicalCertificateFields");
                }
                return _MedicalCertificateFields;
            }
        }
        private ObjectSet<MedicalCertificateField> _MedicalCertificateFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Diagnosis> Diagnoses
        {
            get
            {
                if ((_Diagnoses == null))
                {
                    _Diagnoses = base.CreateObjectSet<Diagnosis>("Diagnoses");
                }
                return _Diagnoses;
            }
        }
        private ObjectSet<Diagnosis> _Diagnoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Administrator> Administrators
        {
            get
            {
                if ((_Administrators == null))
                {
                    _Administrators = base.CreateObjectSet<Administrator>("Administrators");
                }
                return _Administrators;
            }
        }
        private ObjectSet<Administrator> _Administrators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_MedicalEntity> SYS_MedicalEntity
        {
            get
            {
                if ((_SYS_MedicalEntity == null))
                {
                    _SYS_MedicalEntity = base.CreateObjectSet<SYS_MedicalEntity>("SYS_MedicalEntity");
                }
                return _SYS_MedicalEntity;
            }
        }
        private ObjectSet<SYS_MedicalEntity> _SYS_MedicalEntity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_MedicalSpecialty> SYS_MedicalSpecialty
        {
            get
            {
                if ((_SYS_MedicalSpecialty == null))
                {
                    _SYS_MedicalSpecialty = base.CreateObjectSet<SYS_MedicalSpecialty>("SYS_MedicalSpecialty");
                }
                return _SYS_MedicalSpecialty;
            }
        }
        private ObjectSet<SYS_MedicalSpecialty> _SYS_MedicalSpecialty;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DayOff> DayOffs
        {
            get
            {
                if ((_DayOffs == null))
                {
                    _DayOffs = base.CreateObjectSet<DayOff>("DayOffs");
                }
                return _DayOffs;
            }
        }
        private ObjectSet<DayOff> _DayOffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HealthEnsurance> HealthEnsurances
        {
            get
            {
                if ((_HealthEnsurances == null))
                {
                    _HealthEnsurances = base.CreateObjectSet<HealthEnsurance>("HealthEnsurances");
                }
                return _HealthEnsurances;
            }
        }
        private ObjectSet<HealthEnsurance> _HealthEnsurances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Holiday> Holidays
        {
            get
            {
                if ((_Holidays == null))
                {
                    _Holidays = base.CreateObjectSet<Holiday>("Holidays");
                }
                return _Holidays;
            }
        }
        private ObjectSet<Holiday> _Holidays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_Holiday> SYS_Holiday
        {
            get
            {
                if ((_SYS_Holiday == null))
                {
                    _SYS_Holiday = base.CreateObjectSet<SYS_Holiday>("SYS_Holiday");
                }
                return _SYS_Holiday;
            }
        }
        private ObjectSet<SYS_Holiday> _SYS_Holiday;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExaminationRequest> ExaminationRequests
        {
            get
            {
                if ((_ExaminationRequests == null))
                {
                    _ExaminationRequests = base.CreateObjectSet<ExaminationRequest>("ExaminationRequests");
                }
                return _ExaminationRequests;
            }
        }
        private ObjectSet<ExaminationRequest> _ExaminationRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExaminationResult> ExaminationResults
        {
            get
            {
                if ((_ExaminationResults == null))
                {
                    _ExaminationResults = base.CreateObjectSet<ExaminationResult>("ExaminationResults");
                }
                return _ExaminationResults;
            }
        }
        private ObjectSet<ExaminationResult> _ExaminationResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SYS_MedicalProcedure> SYS_MedicalProcedure
        {
            get
            {
                if ((_SYS_MedicalProcedure == null))
                {
                    _SYS_MedicalProcedure = base.CreateObjectSet<SYS_MedicalProcedure>("SYS_MedicalProcedure");
                }
                return _SYS_MedicalProcedure;
            }
        }
        private ObjectSet<SYS_MedicalProcedure> _SYS_MedicalProcedure;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coverages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverages(Coverage coverage)
        {
            base.AddObject("Coverages", coverage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmails(Email email)
        {
            base.AddObject("Emails", email);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Laboratories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLaboratories(Laboratory laboratory)
        {
            base.AddObject("Laboratories", laboratory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Phones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhones(Phone phone)
        {
            base.AddObject("Phones", phone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Practices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPractices(Practice practice)
        {
            base.AddObject("Practices", practice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceipts(Receipt receipt)
        {
            base.AddObject("Receipts", receipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptMedicines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptMedicines(ReceiptMedicine receiptMedicine)
        {
            base.AddObject("ReceiptMedicines", receiptMedicine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Secretaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecretaries(Secretary secretary)
        {
            base.AddObject("Secretaries", secretary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActiveIngredients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActiveIngredients(ActiveIngredient activeIngredient)
        {
            base.AddObject("ActiveIngredients", activeIngredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicines(Medicine medicine)
        {
            base.AddObject("Medicines", medicine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Anamnese EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnamnese(Anamnese anamnese)
        {
            base.AddObject("Anamnese", anamnese);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_ActiveIngredient EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_ActiveIngredient(SYS_ActiveIngredient sYS_ActiveIngredient)
        {
            base.AddObject("SYS_ActiveIngredient", sYS_ActiveIngredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_Laboratory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_Laboratory(SYS_Laboratory sYS_Laboratory)
        {
            base.AddObject("SYS_Laboratory", sYS_Laboratory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_Medicine EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_Medicine(SYS_Medicine sYS_Medicine)
        {
            base.AddObject("SYS_Medicine", sYS_Medicine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CFG_Schedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCFG_Schedule(CFG_Schedule cFG_Schedule)
        {
            base.AddObject("CFG_Schedule", cFG_Schedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_Leaflet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_Leaflet(SYS_Leaflet sYS_Leaflet)
        {
            base.AddObject("SYS_Leaflet", sYS_Leaflet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leaflets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaflets(Leaflet leaflet)
        {
            base.AddObject("Leaflets", leaflet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CFG_Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCFG_Documents(CFG_Documents cFG_Documents)
        {
            base.AddObject("CFG_Documents", cFG_Documents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModelMedicalCertificates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModelMedicalCertificates(ModelMedicalCertificate modelMedicalCertificate)
        {
            base.AddObject("ModelMedicalCertificates", modelMedicalCertificate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModelMedicalCertificateFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModelMedicalCertificateFields(ModelMedicalCertificateField modelMedicalCertificateField)
        {
            base.AddObject("ModelMedicalCertificateFields", modelMedicalCertificateField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalCertificates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalCertificates(MedicalCertificate medicalCertificate)
        {
            base.AddObject("MedicalCertificates", medicalCertificate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalCertificateFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalCertificateFields(MedicalCertificateField medicalCertificateField)
        {
            base.AddObject("MedicalCertificateFields", medicalCertificateField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Diagnoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagnoses(Diagnosis diagnosis)
        {
            base.AddObject("Diagnoses", diagnosis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Administrators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministrators(Administrator administrator)
        {
            base.AddObject("Administrators", administrator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_MedicalEntity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_MedicalEntity(SYS_MedicalEntity sYS_MedicalEntity)
        {
            base.AddObject("SYS_MedicalEntity", sYS_MedicalEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_MedicalSpecialty EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_MedicalSpecialty(SYS_MedicalSpecialty sYS_MedicalSpecialty)
        {
            base.AddObject("SYS_MedicalSpecialty", sYS_MedicalSpecialty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DayOffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDayOffs(DayOff dayOff)
        {
            base.AddObject("DayOffs", dayOff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HealthEnsurances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHealthEnsurances(HealthEnsurance healthEnsurance)
        {
            base.AddObject("HealthEnsurances", healthEnsurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Holidays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHolidays(Holiday holiday)
        {
            base.AddObject("Holidays", holiday);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_Holiday EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_Holiday(SYS_Holiday sYS_Holiday)
        {
            base.AddObject("SYS_Holiday", sYS_Holiday);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExaminationRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExaminationRequests(ExaminationRequest examinationRequest)
        {
            base.AddObject("ExaminationRequests", examinationRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExaminationResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExaminationResults(ExaminationResult examinationResult)
        {
            base.AddObject("ExaminationResults", examinationResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SYS_MedicalProcedure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSYS_MedicalProcedure(SYS_MedicalProcedure sYS_MedicalProcedure)
        {
            base.AddObject("SYS_MedicalProcedure", sYS_MedicalProcedure);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="ActiveIngredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActiveIngredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActiveIngredient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        public static ActiveIngredient CreateActiveIngredient(global::System.Int32 id, global::System.String name, global::System.Int32 doctorId)
        {
            ActiveIngredient activeIngredient = new ActiveIngredient();
            activeIngredient.Id = id;
            activeIngredient.Name = name;
            activeIngredient.DoctorId = doctorId;
            return activeIngredient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ActiveIngredient_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_ActiveIngredient_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_ActiveIngredient_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_ActiveIngredient_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_ActiveIngredient_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "MedicineActiveIngredient", "Medicine")]
        public EntityCollection<Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medicine>("Cerebello.Model.MedicineActiveIngredient", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medicine>("Cerebello.Model.MedicineActiveIngredient", "Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Address CreateAddress(global::System.Int32 id, global::System.Int32 personId)
        {
            Address address = new Address();
            address.Id = id;
            address.PersonId = personId;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CEP
        {
            get
            {
                return _CEP;
            }
            set
            {
                OnCEPChanging(value);
                ReportPropertyChanging("CEP");
                _CEP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CEP");
                OnCEPChanged();
            }
        }
        private global::System.String _CEP;
        partial void OnCEPChanging(global::System.String value);
        partial void OnCEPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Neighborhood
        {
            get
            {
                return _Neighborhood;
            }
            set
            {
                OnNeighborhoodChanging(value);
                ReportPropertyChanging("Neighborhood");
                _Neighborhood = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Neighborhood");
                OnNeighborhoodChanged();
            }
        }
        private global::System.String _Neighborhood;
        partial void OnNeighborhoodChanging(global::System.String value);
        partial void OnNeighborhoodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Complement
        {
            get
            {
                return _Complement;
            }
            set
            {
                OnComplementChanging(value);
                ReportPropertyChanging("Complement");
                _Complement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Complement");
                OnComplementChanged();
            }
        }
        private global::System.String _Complement;
        partial void OnComplementChanging(global::System.String value);
        partial void OnComplementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Address_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Address_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Address_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Address_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Cerebello.Model.FK_Address_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Administrator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Administrator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Administrator object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Administrator CreateAdministrator(global::System.Int32 id)
        {
            Administrator administrator = new Administrator();
            administrator.Id = id;
            return administrator;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Administrator", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Cerebello.Model.FK_User_Administrator", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Cerebello.Model.FK_User_Administrator", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Anamnese")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Anamnese : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Anamnese object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Anamnese CreateAnamnese(global::System.Int32 id, global::System.Int32 patientId, global::System.DateTime createdOn)
        {
            Anamnese anamnese = new Anamnese();
            anamnese.Id = id;
            anamnese.PatientId = patientId;
            anamnese.CreatedOn = createdOn;
            return anamnese;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Anamnese_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Anamnese_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Anamnese_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Anamnese_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("Cerebello.Model.FK_Anamnese_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Diagnosis_Anamnese", "Diagnosi")]
        public EntityCollection<Diagnosis> Diagnoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnosis>("Cerebello.Model.FK_Diagnosis_Anamnese", "Diagnosi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnosis>("Cerebello.Model.FK_Diagnosis_Anamnese", "Diagnosi", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdById">Initial value of the CreatedById property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Appointment CreateAppointment(global::System.Int32 id, global::System.DateTime createdOn, global::System.Int32 createdById, global::System.Int32 doctorId, global::System.Int32 patientId, global::System.DateTime start, global::System.DateTime end, global::System.Int32 type)
        {
            Appointment appointment = new Appointment();
            appointment.Id = id;
            appointment.CreatedOn = createdOn;
            appointment.CreatedById = createdById;
            appointment.DoctorId = doctorId;
            appointment.PatientId = patientId;
            appointment.Start = start;
            appointment.End = end;
            appointment.Type = type;
            return appointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedById
        {
            get
            {
                return _CreatedById;
            }
            set
            {
                OnCreatedByIdChanging(value);
                ReportPropertyChanging("CreatedById");
                _CreatedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedById");
                OnCreatedByIdChanged();
            }
        }
        private global::System.Int32 _CreatedById;
        partial void OnCreatedByIdChanging(global::System.Int32 value);
        partial void OnCreatedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Appointment_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Appointment_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Appointment_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Appointment_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_Appointment_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Appointment_User", "User")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Cerebello.Model.FK_Appointment_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Cerebello.Model.FK_Appointment_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Cerebello.Model.FK_Appointment_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Cerebello.Model.FK_Appointment_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Appointment_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Appointment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Appointment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Appointment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("Cerebello.Model.FK_Appointment_Patient", "Patient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="CFG_Documents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CFG_Documents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CFG_Documents object.
        /// </summary>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="header1">Initial value of the Header1 property.</param>
        /// <param name="header2">Initial value of the Header2 property.</param>
        /// <param name="footerLeft1">Initial value of the FooterLeft1 property.</param>
        /// <param name="footerRight1">Initial value of the FooterRight1 property.</param>
        public static CFG_Documents CreateCFG_Documents(global::System.Int32 doctorId, global::System.String header1, global::System.String header2, global::System.String footerLeft1, global::System.String footerRight1)
        {
            CFG_Documents cFG_Documents = new CFG_Documents();
            cFG_Documents.DoctorId = doctorId;
            cFG_Documents.Header1 = header1;
            cFG_Documents.Header2 = header2;
            cFG_Documents.FooterLeft1 = footerLeft1;
            cFG_Documents.FooterRight1 = footerRight1;
            return cFG_Documents;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                if (_DoctorId != value)
                {
                    OnDoctorIdChanging(value);
                    ReportPropertyChanging("DoctorId");
                    _DoctorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoctorId");
                    OnDoctorIdChanged();
                }
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Header1
        {
            get
            {
                return _Header1;
            }
            set
            {
                OnHeader1Changing(value);
                ReportPropertyChanging("Header1");
                _Header1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Header1");
                OnHeader1Changed();
            }
        }
        private global::System.String _Header1;
        partial void OnHeader1Changing(global::System.String value);
        partial void OnHeader1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Header2
        {
            get
            {
                return _Header2;
            }
            set
            {
                OnHeader2Changing(value);
                ReportPropertyChanging("Header2");
                _Header2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Header2");
                OnHeader2Changed();
            }
        }
        private global::System.String _Header2;
        partial void OnHeader2Changing(global::System.String value);
        partial void OnHeader2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FooterLeft1
        {
            get
            {
                return _FooterLeft1;
            }
            set
            {
                OnFooterLeft1Changing(value);
                ReportPropertyChanging("FooterLeft1");
                _FooterLeft1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FooterLeft1");
                OnFooterLeft1Changed();
            }
        }
        private global::System.String _FooterLeft1;
        partial void OnFooterLeft1Changing(global::System.String value);
        partial void OnFooterLeft1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FooterLeft2
        {
            get
            {
                return _FooterLeft2;
            }
            set
            {
                OnFooterLeft2Changing(value);
                ReportPropertyChanging("FooterLeft2");
                _FooterLeft2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FooterLeft2");
                OnFooterLeft2Changed();
            }
        }
        private global::System.String _FooterLeft2;
        partial void OnFooterLeft2Changing(global::System.String value);
        partial void OnFooterLeft2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FooterRight1
        {
            get
            {
                return _FooterRight1;
            }
            set
            {
                OnFooterRight1Changing(value);
                ReportPropertyChanging("FooterRight1");
                _FooterRight1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FooterRight1");
                OnFooterRight1Changed();
            }
        }
        private global::System.String _FooterRight1;
        partial void OnFooterRight1Changing(global::System.String value);
        partial void OnFooterRight1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FooterRight2
        {
            get
            {
                return _FooterRight2;
            }
            set
            {
                OnFooterRight2Changing(value);
                ReportPropertyChanging("FooterRight2");
                _FooterRight2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FooterRight2");
                OnFooterRight2Changed();
            }
        }
        private global::System.String _FooterRight2;
        partial void OnFooterRight2Changing(global::System.String value);
        partial void OnFooterRight2Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_CFG_Documents_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Documents_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Documents_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Documents_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Documents_Doctor", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="CFG_Schedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CFG_Schedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CFG_Schedule object.
        /// </summary>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="appointmentTime">Initial value of the AppointmentTime property.</param>
        /// <param name="sunday">Initial value of the Sunday property.</param>
        /// <param name="monday">Initial value of the Monday property.</param>
        /// <param name="tuesday">Initial value of the Tuesday property.</param>
        /// <param name="wednesday">Initial value of the Wednesday property.</param>
        /// <param name="thursday">Initial value of the Thursday property.</param>
        /// <param name="friday">Initial value of the Friday property.</param>
        /// <param name="saturday">Initial value of the Saturday property.</param>
        public static CFG_Schedule CreateCFG_Schedule(global::System.Int32 doctorId, global::System.Int32 appointmentTime, global::System.Boolean sunday, global::System.Boolean monday, global::System.Boolean tuesday, global::System.Boolean wednesday, global::System.Boolean thursday, global::System.Boolean friday, global::System.Boolean saturday)
        {
            CFG_Schedule cFG_Schedule = new CFG_Schedule();
            cFG_Schedule.DoctorId = doctorId;
            cFG_Schedule.AppointmentTime = appointmentTime;
            cFG_Schedule.Sunday = sunday;
            cFG_Schedule.Monday = monday;
            cFG_Schedule.Tuesday = tuesday;
            cFG_Schedule.Wednesday = wednesday;
            cFG_Schedule.Thursday = thursday;
            cFG_Schedule.Friday = friday;
            cFG_Schedule.Saturday = saturday;
            return cFG_Schedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                if (_DoctorId != value)
                {
                    OnDoctorIdChanging(value);
                    ReportPropertyChanging("DoctorId");
                    _DoctorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoctorId");
                    OnDoctorIdChanged();
                }
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppointmentTime
        {
            get
            {
                return _AppointmentTime;
            }
            set
            {
                OnAppointmentTimeChanging(value);
                ReportPropertyChanging("AppointmentTime");
                _AppointmentTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentTime");
                OnAppointmentTimeChanged();
            }
        }
        private global::System.Int32 _AppointmentTime;
        partial void OnAppointmentTimeChanging(global::System.Int32 value);
        partial void OnAppointmentTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sunday
        {
            get
            {
                return _Sunday;
            }
            set
            {
                OnSundayChanging(value);
                ReportPropertyChanging("Sunday");
                _Sunday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sunday");
                OnSundayChanged();
            }
        }
        private global::System.Boolean _Sunday;
        partial void OnSundayChanging(global::System.Boolean value);
        partial void OnSundayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Monday
        {
            get
            {
                return _Monday;
            }
            set
            {
                OnMondayChanging(value);
                ReportPropertyChanging("Monday");
                _Monday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Monday");
                OnMondayChanged();
            }
        }
        private global::System.Boolean _Monday;
        partial void OnMondayChanging(global::System.Boolean value);
        partial void OnMondayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Tuesday
        {
            get
            {
                return _Tuesday;
            }
            set
            {
                OnTuesdayChanging(value);
                ReportPropertyChanging("Tuesday");
                _Tuesday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tuesday");
                OnTuesdayChanged();
            }
        }
        private global::System.Boolean _Tuesday;
        partial void OnTuesdayChanging(global::System.Boolean value);
        partial void OnTuesdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Wednesday
        {
            get
            {
                return _Wednesday;
            }
            set
            {
                OnWednesdayChanging(value);
                ReportPropertyChanging("Wednesday");
                _Wednesday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wednesday");
                OnWednesdayChanged();
            }
        }
        private global::System.Boolean _Wednesday;
        partial void OnWednesdayChanging(global::System.Boolean value);
        partial void OnWednesdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Thursday
        {
            get
            {
                return _Thursday;
            }
            set
            {
                OnThursdayChanging(value);
                ReportPropertyChanging("Thursday");
                _Thursday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Thursday");
                OnThursdayChanged();
            }
        }
        private global::System.Boolean _Thursday;
        partial void OnThursdayChanging(global::System.Boolean value);
        partial void OnThursdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Friday
        {
            get
            {
                return _Friday;
            }
            set
            {
                OnFridayChanging(value);
                ReportPropertyChanging("Friday");
                _Friday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Friday");
                OnFridayChanged();
            }
        }
        private global::System.Boolean _Friday;
        partial void OnFridayChanging(global::System.Boolean value);
        partial void OnFridayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Saturday
        {
            get
            {
                return _Saturday;
            }
            set
            {
                OnSaturdayChanging(value);
                ReportPropertyChanging("Saturday");
                _Saturday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Saturday");
                OnSaturdayChanged();
            }
        }
        private global::System.Boolean _Saturday;
        partial void OnSaturdayChanging(global::System.Boolean value);
        partial void OnSaturdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SundayWorkdayStartTime
        {
            get
            {
                return _SundayWorkdayStartTime;
            }
            set
            {
                OnSundayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("SundayWorkdayStartTime");
                _SundayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SundayWorkdayStartTime");
                OnSundayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _SundayWorkdayStartTime;
        partial void OnSundayWorkdayStartTimeChanging(global::System.String value);
        partial void OnSundayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SundayWorkdayEndTime
        {
            get
            {
                return _SundayWorkdayEndTime;
            }
            set
            {
                OnSundayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("SundayWorkdayEndTime");
                _SundayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SundayWorkdayEndTime");
                OnSundayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _SundayWorkdayEndTime;
        partial void OnSundayWorkdayEndTimeChanging(global::System.String value);
        partial void OnSundayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SundayLunchStartTime
        {
            get
            {
                return _SundayLunchStartTime;
            }
            set
            {
                OnSundayLunchStartTimeChanging(value);
                ReportPropertyChanging("SundayLunchStartTime");
                _SundayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SundayLunchStartTime");
                OnSundayLunchStartTimeChanged();
            }
        }
        private global::System.String _SundayLunchStartTime;
        partial void OnSundayLunchStartTimeChanging(global::System.String value);
        partial void OnSundayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SundayLunchEndTime
        {
            get
            {
                return _SundayLunchEndTime;
            }
            set
            {
                OnSundayLunchEndTimeChanging(value);
                ReportPropertyChanging("SundayLunchEndTime");
                _SundayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SundayLunchEndTime");
                OnSundayLunchEndTimeChanged();
            }
        }
        private global::System.String _SundayLunchEndTime;
        partial void OnSundayLunchEndTimeChanging(global::System.String value);
        partial void OnSundayLunchEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MondayWorkdayStartTime
        {
            get
            {
                return _MondayWorkdayStartTime;
            }
            set
            {
                OnMondayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("MondayWorkdayStartTime");
                _MondayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MondayWorkdayStartTime");
                OnMondayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _MondayWorkdayStartTime;
        partial void OnMondayWorkdayStartTimeChanging(global::System.String value);
        partial void OnMondayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MondayWorkdayEndTime
        {
            get
            {
                return _MondayWorkdayEndTime;
            }
            set
            {
                OnMondayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("MondayWorkdayEndTime");
                _MondayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MondayWorkdayEndTime");
                OnMondayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _MondayWorkdayEndTime;
        partial void OnMondayWorkdayEndTimeChanging(global::System.String value);
        partial void OnMondayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MondayLunchStartTime
        {
            get
            {
                return _MondayLunchStartTime;
            }
            set
            {
                OnMondayLunchStartTimeChanging(value);
                ReportPropertyChanging("MondayLunchStartTime");
                _MondayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MondayLunchStartTime");
                OnMondayLunchStartTimeChanged();
            }
        }
        private global::System.String _MondayLunchStartTime;
        partial void OnMondayLunchStartTimeChanging(global::System.String value);
        partial void OnMondayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MondayLunchEndTime
        {
            get
            {
                return _MondayLunchEndTime;
            }
            set
            {
                OnMondayLunchEndTimeChanging(value);
                ReportPropertyChanging("MondayLunchEndTime");
                _MondayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MondayLunchEndTime");
                OnMondayLunchEndTimeChanged();
            }
        }
        private global::System.String _MondayLunchEndTime;
        partial void OnMondayLunchEndTimeChanging(global::System.String value);
        partial void OnMondayLunchEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TuesdayWorkdayStartTime
        {
            get
            {
                return _TuesdayWorkdayStartTime;
            }
            set
            {
                OnTuesdayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("TuesdayWorkdayStartTime");
                _TuesdayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TuesdayWorkdayStartTime");
                OnTuesdayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _TuesdayWorkdayStartTime;
        partial void OnTuesdayWorkdayStartTimeChanging(global::System.String value);
        partial void OnTuesdayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TuesdayWorkdayEndTime
        {
            get
            {
                return _TuesdayWorkdayEndTime;
            }
            set
            {
                OnTuesdayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("TuesdayWorkdayEndTime");
                _TuesdayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TuesdayWorkdayEndTime");
                OnTuesdayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _TuesdayWorkdayEndTime;
        partial void OnTuesdayWorkdayEndTimeChanging(global::System.String value);
        partial void OnTuesdayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TuesdayLunchStartTime
        {
            get
            {
                return _TuesdayLunchStartTime;
            }
            set
            {
                OnTuesdayLunchStartTimeChanging(value);
                ReportPropertyChanging("TuesdayLunchStartTime");
                _TuesdayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TuesdayLunchStartTime");
                OnTuesdayLunchStartTimeChanged();
            }
        }
        private global::System.String _TuesdayLunchStartTime;
        partial void OnTuesdayLunchStartTimeChanging(global::System.String value);
        partial void OnTuesdayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TuesdayLunchEndTime
        {
            get
            {
                return _TuesdayLunchEndTime;
            }
            set
            {
                OnTuesdayLunchEndTimeChanging(value);
                ReportPropertyChanging("TuesdayLunchEndTime");
                _TuesdayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TuesdayLunchEndTime");
                OnTuesdayLunchEndTimeChanged();
            }
        }
        private global::System.String _TuesdayLunchEndTime;
        partial void OnTuesdayLunchEndTimeChanging(global::System.String value);
        partial void OnTuesdayLunchEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WednesdayWorkdayStartTime
        {
            get
            {
                return _WednesdayWorkdayStartTime;
            }
            set
            {
                OnWednesdayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("WednesdayWorkdayStartTime");
                _WednesdayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WednesdayWorkdayStartTime");
                OnWednesdayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _WednesdayWorkdayStartTime;
        partial void OnWednesdayWorkdayStartTimeChanging(global::System.String value);
        partial void OnWednesdayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WednesdayWorkdayEndTime
        {
            get
            {
                return _WednesdayWorkdayEndTime;
            }
            set
            {
                OnWednesdayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("WednesdayWorkdayEndTime");
                _WednesdayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WednesdayWorkdayEndTime");
                OnWednesdayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _WednesdayWorkdayEndTime;
        partial void OnWednesdayWorkdayEndTimeChanging(global::System.String value);
        partial void OnWednesdayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WednesdayLunchStartTime
        {
            get
            {
                return _WednesdayLunchStartTime;
            }
            set
            {
                OnWednesdayLunchStartTimeChanging(value);
                ReportPropertyChanging("WednesdayLunchStartTime");
                _WednesdayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WednesdayLunchStartTime");
                OnWednesdayLunchStartTimeChanged();
            }
        }
        private global::System.String _WednesdayLunchStartTime;
        partial void OnWednesdayLunchStartTimeChanging(global::System.String value);
        partial void OnWednesdayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WednesdayLunchEndTime
        {
            get
            {
                return _WednesdayLunchEndTime;
            }
            set
            {
                OnWednesdayLunchEndTimeChanging(value);
                ReportPropertyChanging("WednesdayLunchEndTime");
                _WednesdayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WednesdayLunchEndTime");
                OnWednesdayLunchEndTimeChanged();
            }
        }
        private global::System.String _WednesdayLunchEndTime;
        partial void OnWednesdayLunchEndTimeChanging(global::System.String value);
        partial void OnWednesdayLunchEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThursdayWorkdayStartTime
        {
            get
            {
                return _ThursdayWorkdayStartTime;
            }
            set
            {
                OnThursdayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("ThursdayWorkdayStartTime");
                _ThursdayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThursdayWorkdayStartTime");
                OnThursdayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _ThursdayWorkdayStartTime;
        partial void OnThursdayWorkdayStartTimeChanging(global::System.String value);
        partial void OnThursdayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThursdayWorkdayEndTime
        {
            get
            {
                return _ThursdayWorkdayEndTime;
            }
            set
            {
                OnThursdayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("ThursdayWorkdayEndTime");
                _ThursdayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThursdayWorkdayEndTime");
                OnThursdayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _ThursdayWorkdayEndTime;
        partial void OnThursdayWorkdayEndTimeChanging(global::System.String value);
        partial void OnThursdayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThursdayLunchStartTime
        {
            get
            {
                return _ThursdayLunchStartTime;
            }
            set
            {
                OnThursdayLunchStartTimeChanging(value);
                ReportPropertyChanging("ThursdayLunchStartTime");
                _ThursdayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThursdayLunchStartTime");
                OnThursdayLunchStartTimeChanged();
            }
        }
        private global::System.String _ThursdayLunchStartTime;
        partial void OnThursdayLunchStartTimeChanging(global::System.String value);
        partial void OnThursdayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThursdayLunchEndTime
        {
            get
            {
                return _ThursdayLunchEndTime;
            }
            set
            {
                OnThursdayLunchEndTimeChanging(value);
                ReportPropertyChanging("ThursdayLunchEndTime");
                _ThursdayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThursdayLunchEndTime");
                OnThursdayLunchEndTimeChanged();
            }
        }
        private global::System.String _ThursdayLunchEndTime;
        partial void OnThursdayLunchEndTimeChanging(global::System.String value);
        partial void OnThursdayLunchEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FridayWorkdayStartTime
        {
            get
            {
                return _FridayWorkdayStartTime;
            }
            set
            {
                OnFridayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("FridayWorkdayStartTime");
                _FridayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FridayWorkdayStartTime");
                OnFridayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _FridayWorkdayStartTime;
        partial void OnFridayWorkdayStartTimeChanging(global::System.String value);
        partial void OnFridayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FridayWorkdayEndTime
        {
            get
            {
                return _FridayWorkdayEndTime;
            }
            set
            {
                OnFridayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("FridayWorkdayEndTime");
                _FridayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FridayWorkdayEndTime");
                OnFridayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _FridayWorkdayEndTime;
        partial void OnFridayWorkdayEndTimeChanging(global::System.String value);
        partial void OnFridayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FridayLunchStartTime
        {
            get
            {
                return _FridayLunchStartTime;
            }
            set
            {
                OnFridayLunchStartTimeChanging(value);
                ReportPropertyChanging("FridayLunchStartTime");
                _FridayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FridayLunchStartTime");
                OnFridayLunchStartTimeChanged();
            }
        }
        private global::System.String _FridayLunchStartTime;
        partial void OnFridayLunchStartTimeChanging(global::System.String value);
        partial void OnFridayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FridayLunchEndTime
        {
            get
            {
                return _FridayLunchEndTime;
            }
            set
            {
                OnFridayLunchEndTimeChanging(value);
                ReportPropertyChanging("FridayLunchEndTime");
                _FridayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FridayLunchEndTime");
                OnFridayLunchEndTimeChanged();
            }
        }
        private global::System.String _FridayLunchEndTime;
        partial void OnFridayLunchEndTimeChanging(global::System.String value);
        partial void OnFridayLunchEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SaturdayWorkdayStartTime
        {
            get
            {
                return _SaturdayWorkdayStartTime;
            }
            set
            {
                OnSaturdayWorkdayStartTimeChanging(value);
                ReportPropertyChanging("SaturdayWorkdayStartTime");
                _SaturdayWorkdayStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SaturdayWorkdayStartTime");
                OnSaturdayWorkdayStartTimeChanged();
            }
        }
        private global::System.String _SaturdayWorkdayStartTime;
        partial void OnSaturdayWorkdayStartTimeChanging(global::System.String value);
        partial void OnSaturdayWorkdayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SaturdayWorkdayEndTime
        {
            get
            {
                return _SaturdayWorkdayEndTime;
            }
            set
            {
                OnSaturdayWorkdayEndTimeChanging(value);
                ReportPropertyChanging("SaturdayWorkdayEndTime");
                _SaturdayWorkdayEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SaturdayWorkdayEndTime");
                OnSaturdayWorkdayEndTimeChanged();
            }
        }
        private global::System.String _SaturdayWorkdayEndTime;
        partial void OnSaturdayWorkdayEndTimeChanging(global::System.String value);
        partial void OnSaturdayWorkdayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SaturdayLunchStartTime
        {
            get
            {
                return _SaturdayLunchStartTime;
            }
            set
            {
                OnSaturdayLunchStartTimeChanging(value);
                ReportPropertyChanging("SaturdayLunchStartTime");
                _SaturdayLunchStartTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SaturdayLunchStartTime");
                OnSaturdayLunchStartTimeChanged();
            }
        }
        private global::System.String _SaturdayLunchStartTime;
        partial void OnSaturdayLunchStartTimeChanging(global::System.String value);
        partial void OnSaturdayLunchStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SaturdayLunchEndTime
        {
            get
            {
                return _SaturdayLunchEndTime;
            }
            set
            {
                OnSaturdayLunchEndTimeChanging(value);
                ReportPropertyChanging("SaturdayLunchEndTime");
                _SaturdayLunchEndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SaturdayLunchEndTime");
                OnSaturdayLunchEndTimeChanged();
            }
        }
        private global::System.String _SaturdayLunchEndTime;
        partial void OnSaturdayLunchEndTimeChanging(global::System.String value);
        partial void OnSaturdayLunchEndTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_CFG_Schedule_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Schedule_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Schedule_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Schedule_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_CFG_Schedule_Doctor", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Coverage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coverage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coverage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Coverage CreateCoverage(global::System.Int32 id, global::System.String name)
        {
            Coverage coverage = new Coverage();
            coverage.Id = id;
            coverage.Name = name;
            return coverage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Patient_Coverage", "Patient")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("Cerebello.Model.FK_Patient_Coverage", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("Cerebello.Model.FK_Patient_Coverage", "Patient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="DayOff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayOff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DayOff object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static DayOff CreateDayOff(global::System.Int32 id, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String description)
        {
            DayOff dayOff = new DayOff();
            dayOff.Id = id;
            dayOff.StartDate = startDate;
            dayOff.EndDate = endDate;
            dayOff.Description = description;
            return dayOff;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Diagnosis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnosis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Diagnosis object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="anamneseId">Initial value of the AnamneseId property.</param>
        /// <param name="cid10Code">Initial value of the Cid10Code property.</param>
        public static Diagnosis CreateDiagnosis(global::System.Int32 id, global::System.Int32 anamneseId, global::System.String cid10Code)
        {
            Diagnosis diagnosis = new Diagnosis();
            diagnosis.Id = id;
            diagnosis.AnamneseId = anamneseId;
            diagnosis.Cid10Code = cid10Code;
            return diagnosis;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnamneseId
        {
            get
            {
                return _AnamneseId;
            }
            set
            {
                OnAnamneseIdChanging(value);
                ReportPropertyChanging("AnamneseId");
                _AnamneseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnamneseId");
                OnAnamneseIdChanged();
            }
        }
        private global::System.Int32 _AnamneseId;
        partial void OnAnamneseIdChanging(global::System.Int32 value);
        partial void OnAnamneseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cid10Code
        {
            get
            {
                return _Cid10Code;
            }
            set
            {
                OnCid10CodeChanging(value);
                ReportPropertyChanging("Cid10Code");
                _Cid10Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cid10Code");
                OnCid10CodeChanged();
            }
        }
        private global::System.String _Cid10Code;
        partial void OnCid10CodeChanging(global::System.String value);
        partial void OnCid10CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cid10Name
        {
            get
            {
                return _Cid10Name;
            }
            set
            {
                OnCid10NameChanging(value);
                ReportPropertyChanging("Cid10Name");
                _Cid10Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cid10Name");
                OnCid10NameChanged();
            }
        }
        private global::System.String _Cid10Name;
        partial void OnCid10NameChanging(global::System.String value);
        partial void OnCid10NameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Diagnosis_Anamnese", "Anamnese")]
        public Anamnese Anamnese
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("Cerebello.Model.FK_Diagnosis_Anamnese", "Anamnese").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("Cerebello.Model.FK_Diagnosis_Anamnese", "Anamnese").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Anamnese> AnamneseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("Cerebello.Model.FK_Diagnosis_Anamnese", "Anamnese");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Anamnese>("Cerebello.Model.FK_Diagnosis_Anamnese", "Anamnese", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cRM">Initial value of the CRM property.</param>
        /// <param name="medicalEntityId">Initial value of the MedicalEntityId property.</param>
        /// <param name="medicalSpecialtyId">Initial value of the MedicalSpecialtyId property.</param>
        public static Doctor CreateDoctor(global::System.Int32 id, global::System.String cRM, global::System.Int32 medicalEntityId, global::System.Int32 medicalSpecialtyId)
        {
            Doctor doctor = new Doctor();
            doctor.Id = id;
            doctor.CRM = cRM;
            doctor.MedicalEntityId = medicalEntityId;
            doctor.MedicalSpecialtyId = medicalSpecialtyId;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CRM
        {
            get
            {
                return _CRM;
            }
            set
            {
                OnCRMChanging(value);
                ReportPropertyChanging("CRM");
                _CRM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CRM");
                OnCRMChanged();
            }
        }
        private global::System.String _CRM;
        partial void OnCRMChanging(global::System.String value);
        partial void OnCRMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalEntityId
        {
            get
            {
                return _MedicalEntityId;
            }
            set
            {
                OnMedicalEntityIdChanging(value);
                ReportPropertyChanging("MedicalEntityId");
                _MedicalEntityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalEntityId");
                OnMedicalEntityIdChanged();
            }
        }
        private global::System.Int32 _MedicalEntityId;
        partial void OnMedicalEntityIdChanging(global::System.Int32 value);
        partial void OnMedicalEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalSpecialtyId
        {
            get
            {
                return _MedicalSpecialtyId;
            }
            set
            {
                OnMedicalSpecialtyIdChanging(value);
                ReportPropertyChanging("MedicalSpecialtyId");
                _MedicalSpecialtyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalSpecialtyId");
                OnMedicalSpecialtyIdChanged();
            }
        }
        private global::System.Int32 _MedicalSpecialtyId;
        partial void OnMedicalSpecialtyIdChanging(global::System.Int32 value);
        partial void OnMedicalSpecialtyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedicalEntityJurisdiction
        {
            get
            {
                return _MedicalEntityJurisdiction;
            }
            set
            {
                OnMedicalEntityJurisdictionChanging(value);
                ReportPropertyChanging("MedicalEntityJurisdiction");
                _MedicalEntityJurisdiction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedicalEntityJurisdiction");
                OnMedicalEntityJurisdictionChanged();
            }
        }
        private global::System.String _MedicalEntityJurisdiction;
        partial void OnMedicalEntityJurisdictionChanging(global::System.String value);
        partial void OnMedicalEntityJurisdictionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Appointment_Doctor", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("Cerebello.Model.FK_Appointment_Doctor", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("Cerebello.Model.FK_Appointment_Doctor", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Laboratory_Doctor", "Laboratory")]
        public EntityCollection<Laboratory> Laboratories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Laboratory>("Cerebello.Model.FK_Laboratory_Doctor", "Laboratory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Laboratory>("Cerebello.Model.FK_Laboratory_Doctor", "Laboratory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Patient_Doctor", "Patient")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("Cerebello.Model.FK_Patient_Doctor", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("Cerebello.Model.FK_Patient_Doctor", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ActiveIngredient_Doctor", "ActiveIngredient")]
        public EntityCollection<ActiveIngredient> ActiveIngredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActiveIngredient>("Cerebello.Model.FK_ActiveIngredient_Doctor", "ActiveIngredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActiveIngredient>("Cerebello.Model.FK_ActiveIngredient_Doctor", "ActiveIngredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Medicine_Doctor", "Medicine")]
        public EntityCollection<Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medicine>("Cerebello.Model.FK_Medicine_Doctor", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medicine>("Cerebello.Model.FK_Medicine_Doctor", "Medicine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_CFG_Schedule_Doctor", "CFG_Schedule")]
        public CFG_Schedule CFG_Schedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CFG_Schedule>("Cerebello.Model.FK_CFG_Schedule_Doctor", "CFG_Schedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CFG_Schedule>("Cerebello.Model.FK_CFG_Schedule_Doctor", "CFG_Schedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CFG_Schedule> CFG_ScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CFG_Schedule>("Cerebello.Model.FK_CFG_Schedule_Doctor", "CFG_Schedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CFG_Schedule>("Cerebello.Model.FK_CFG_Schedule_Doctor", "CFG_Schedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_CFG_Documents_Doctor", "CFG_Documents")]
        public CFG_Documents CFG_Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CFG_Documents>("Cerebello.Model.FK_CFG_Documents_Doctor", "CFG_Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CFG_Documents>("Cerebello.Model.FK_CFG_Documents_Doctor", "CFG_Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CFG_Documents> CFG_DocumentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CFG_Documents>("Cerebello.Model.FK_CFG_Documents_Doctor", "CFG_Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CFG_Documents>("Cerebello.Model.FK_CFG_Documents_Doctor", "CFG_Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ModelMedicalCertificate_Doctor", "ModelMedicalCertificate")]
        public EntityCollection<ModelMedicalCertificate> ModelMedicalCertificates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModelMedicalCertificate>("Cerebello.Model.FK_ModelMedicalCertificate_Doctor", "ModelMedicalCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModelMedicalCertificate>("Cerebello.Model.FK_ModelMedicalCertificate_Doctor", "ModelMedicalCertificate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Doctor", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Cerebello.Model.FK_User_Doctor", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Cerebello.Model.FK_User_Doctor", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Doctor_MedicalEntity1", "SYS_MedicalEntity")]
        public SYS_MedicalEntity SYS_MedicalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalEntity>("Cerebello.Model.FK_Doctor_MedicalEntity1", "SYS_MedicalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalEntity>("Cerebello.Model.FK_Doctor_MedicalEntity1", "SYS_MedicalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SYS_MedicalEntity> SYS_MedicalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalEntity>("Cerebello.Model.FK_Doctor_MedicalEntity1", "SYS_MedicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SYS_MedicalEntity>("Cerebello.Model.FK_Doctor_MedicalEntity1", "SYS_MedicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Doctor_MedicalSpecialty1", "SYS_MedicalSpecialty")]
        public SYS_MedicalSpecialty SYS_MedicalSpecialty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalSpecialty>("Cerebello.Model.FK_Doctor_MedicalSpecialty1", "SYS_MedicalSpecialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalSpecialty>("Cerebello.Model.FK_Doctor_MedicalSpecialty1", "SYS_MedicalSpecialty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SYS_MedicalSpecialty> SYS_MedicalSpecialtyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalSpecialty>("Cerebello.Model.FK_Doctor_MedicalSpecialty1", "SYS_MedicalSpecialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SYS_MedicalSpecialty>("Cerebello.Model.FK_Doctor_MedicalSpecialty1", "SYS_MedicalSpecialty", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Email")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Email : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Email object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Email CreateEmail(global::System.Int32 id, global::System.String address, global::System.Int32 personId)
        {
            Email email = new Email();
            email.Id = id;
            email.Address = address;
            email.PersonId = personId;
            return email;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GravatarEmailHash
        {
            get
            {
                return _GravatarEmailHash;
            }
            set
            {
                OnGravatarEmailHashChanging(value);
                ReportPropertyChanging("GravatarEmailHash");
                _GravatarEmailHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GravatarEmailHash");
                OnGravatarEmailHashChanged();
            }
        }
        private global::System.String _GravatarEmailHash;
        partial void OnGravatarEmailHashChanging(global::System.String value);
        partial void OnGravatarEmailHashChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Email_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Email_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Email_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Email_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Cerebello.Model.FK_Email_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="ExaminationRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExaminationRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExaminationRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="medicalProcedureId">Initial value of the MedicalProcedureId property.</param>
        public static ExaminationRequest CreateExaminationRequest(global::System.Int32 id, global::System.Int32 patientId, global::System.DateTime createdOn, global::System.Int32 medicalProcedureId)
        {
            ExaminationRequest examinationRequest = new ExaminationRequest();
            examinationRequest.Id = id;
            examinationRequest.PatientId = patientId;
            examinationRequest.CreatedOn = createdOn;
            examinationRequest.MedicalProcedureId = medicalProcedureId;
            return examinationRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalProcedureId
        {
            get
            {
                return _MedicalProcedureId;
            }
            set
            {
                OnMedicalProcedureIdChanging(value);
                ReportPropertyChanging("MedicalProcedureId");
                _MedicalProcedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalProcedureId");
                OnMedicalProcedureIdChanged();
            }
        }
        private global::System.Int32 _MedicalProcedureId;
        partial void OnMedicalProcedureIdChanging(global::System.Int32 value);
        partial void OnMedicalProcedureIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationRequest_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_ExaminationRequest_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_ExaminationRequest_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_ExaminationRequest_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("Cerebello.Model.FK_ExaminationRequest_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationRequest_SYS_MedicalProcedures11", "SYS_MedicalProcedure")]
        public SYS_MedicalProcedure SYS_MedicalProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationRequest_SYS_MedicalProcedures11", "SYS_MedicalProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationRequest_SYS_MedicalProcedures11", "SYS_MedicalProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SYS_MedicalProcedure> SYS_MedicalProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationRequest_SYS_MedicalProcedures11", "SYS_MedicalProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationRequest_SYS_MedicalProcedures11", "SYS_MedicalProcedure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="ExaminationResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExaminationResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExaminationResult object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="medicalProcedureId">Initial value of the MedicalProcedureId property.</param>
        public static ExaminationResult CreateExaminationResult(global::System.Int32 id, global::System.String text, global::System.Int32 patientId, global::System.DateTime createdOn, global::System.Int32 medicalProcedureId)
        {
            ExaminationResult examinationResult = new ExaminationResult();
            examinationResult.Id = id;
            examinationResult.Text = text;
            examinationResult.PatientId = patientId;
            examinationResult.CreatedOn = createdOn;
            examinationResult.MedicalProcedureId = medicalProcedureId;
            return examinationResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalProcedureId
        {
            get
            {
                return _MedicalProcedureId;
            }
            set
            {
                OnMedicalProcedureIdChanging(value);
                ReportPropertyChanging("MedicalProcedureId");
                _MedicalProcedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalProcedureId");
                OnMedicalProcedureIdChanged();
            }
        }
        private global::System.Int32 _MedicalProcedureId;
        partial void OnMedicalProcedureIdChanging(global::System.Int32 value);
        partial void OnMedicalProcedureIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationResult_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_ExaminationResult_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_ExaminationResult_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_ExaminationResult_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("Cerebello.Model.FK_ExaminationResult_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationResult_SYS_MedicalProcedures1", "SYS_MedicalProcedure")]
        public SYS_MedicalProcedure SYS_MedicalProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationResult_SYS_MedicalProcedures1", "SYS_MedicalProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationResult_SYS_MedicalProcedures1", "SYS_MedicalProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SYS_MedicalProcedure> SYS_MedicalProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationResult_SYS_MedicalProcedures1", "SYS_MedicalProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SYS_MedicalProcedure>("Cerebello.Model.FK_ExaminationResult_SYS_MedicalProcedures1", "SYS_MedicalProcedure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="HealthEnsurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HealthEnsurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HealthEnsurance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static HealthEnsurance CreateHealthEnsurance(global::System.Int32 id, global::System.String name)
        {
            HealthEnsurance healthEnsurance = new HealthEnsurance();
            healthEnsurance.Id = id;
            healthEnsurance.Name = name;
            return healthEnsurance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Holiday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Holiday : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Holiday object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Holiday CreateHoliday(global::System.Int32 id, global::System.String name, global::System.DateTime date)
        {
            Holiday holiday = new Holiday();
            holiday.Id = id;
            holiday.Name = name;
            holiday.Date = date;
            return holiday;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Laboratory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Laboratory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Laboratory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        public static Laboratory CreateLaboratory(global::System.Int32 id, global::System.String name, global::System.Int32 doctorId)
        {
            Laboratory laboratory = new Laboratory();
            laboratory.Id = id;
            laboratory.Name = name;
            laboratory.DoctorId = doctorId;
            return laboratory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Laboratory_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Laboratory_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Laboratory_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Laboratory_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_Laboratory_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Medicine_MedicineLaboratory", "Medicine")]
        public EntityCollection<Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medicine>("Cerebello.Model.FK_Medicine_MedicineLaboratory", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medicine>("Cerebello.Model.FK_Medicine_MedicineLaboratory", "Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Leaflet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Leaflet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Leaflet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static Leaflet CreateLeaflet(global::System.Int32 id, global::System.String url)
        {
            Leaflet leaflet = new Leaflet();
            leaflet.Id = id;
            leaflet.Url = url;
            return leaflet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "MedicineLeaflet", "Medicine")]
        public EntityCollection<Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medicine>("Cerebello.Model.MedicineLeaflet", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medicine>("Cerebello.Model.MedicineLeaflet", "Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="MedicalCertificate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalCertificate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalCertificate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static MedicalCertificate CreateMedicalCertificate(global::System.Int32 id, global::System.Int32 patientId, global::System.DateTime createdOn, global::System.String text)
        {
            MedicalCertificate medicalCertificate = new MedicalCertificate();
            medicalCertificate.Id = id;
            medicalCertificate.PatientId = patientId;
            medicalCertificate.CreatedOn = createdOn;
            medicalCertificate.Text = text;
            return medicalCertificate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModelMedicalCertificateId
        {
            get
            {
                return _ModelMedicalCertificateId;
            }
            set
            {
                OnModelMedicalCertificateIdChanging(value);
                ReportPropertyChanging("ModelMedicalCertificateId");
                _ModelMedicalCertificateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelMedicalCertificateId");
                OnModelMedicalCertificateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ModelMedicalCertificateId;
        partial void OnModelMedicalCertificateIdChanging(Nullable<global::System.Int32> value);
        partial void OnModelMedicalCertificateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_MedicalCertificate_ModelMedicalCertificate", "ModelMedicalCertificate")]
        public ModelMedicalCertificate ModelMedicalCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_ModelMedicalCertificate", "ModelMedicalCertificate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_ModelMedicalCertificate", "ModelMedicalCertificate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ModelMedicalCertificate> ModelMedicalCertificateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_ModelMedicalCertificate", "ModelMedicalCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_ModelMedicalCertificate", "ModelMedicalCertificate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_MedicalCertificate_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_MedicalCertificate_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_MedicalCertificate_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_MedicalCertificate_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("Cerebello.Model.FK_MedicalCertificate_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificateField")]
        public EntityCollection<MedicalCertificateField> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalCertificateField>("Cerebello.Model.FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificateField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalCertificateField>("Cerebello.Model.FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificateField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="MedicalCertificateField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalCertificateField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalCertificateField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="medicalCertificateId">Initial value of the MedicalCertificateId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MedicalCertificateField CreateMedicalCertificateField(global::System.Int32 id, global::System.Int32 medicalCertificateId, global::System.String name)
        {
            MedicalCertificateField medicalCertificateField = new MedicalCertificateField();
            medicalCertificateField.Id = id;
            medicalCertificateField.MedicalCertificateId = medicalCertificateId;
            medicalCertificateField.Name = name;
            return medicalCertificateField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalCertificateId
        {
            get
            {
                return _MedicalCertificateId;
            }
            set
            {
                OnMedicalCertificateIdChanging(value);
                ReportPropertyChanging("MedicalCertificateId");
                _MedicalCertificateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalCertificateId");
                OnMedicalCertificateIdChanged();
            }
        }
        private global::System.Int32 _MedicalCertificateId;
        partial void OnMedicalCertificateIdChanging(global::System.Int32 value);
        partial void OnMedicalCertificateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificate")]
        public MedicalCertificate MedicalCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalCertificate> MedicalCertificateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificateField_MedicalCertificate", "MedicalCertificate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Medicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medicine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medicine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="usage">Initial value of the Usage property.</param>
        public static Medicine CreateMedicine(global::System.Int32 id, global::System.String name, global::System.Int32 doctorId, global::System.Int16 usage)
        {
            Medicine medicine = new Medicine();
            medicine.Id = id;
            medicine.Name = name;
            medicine.DoctorId = doctorId;
            medicine.Usage = usage;
            return medicine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LaboratoryId
        {
            get
            {
                return _LaboratoryId;
            }
            set
            {
                OnLaboratoryIdChanging(value);
                ReportPropertyChanging("LaboratoryId");
                _LaboratoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaboratoryId");
                OnLaboratoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LaboratoryId;
        partial void OnLaboratoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnLaboratoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Usage
        {
            get
            {
                return _Usage;
            }
            set
            {
                OnUsageChanging(value);
                ReportPropertyChanging("Usage");
                _Usage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Usage");
                OnUsageChanged();
            }
        }
        private global::System.Int16 _Usage;
        partial void OnUsageChanging(global::System.Int16 value);
        partial void OnUsageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Medicine_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Medicine_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Medicine_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Medicine_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_Medicine_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Medicine_MedicineLaboratory", "Laboratory")]
        public Laboratory Laboratory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Laboratory>("Cerebello.Model.FK_Medicine_MedicineLaboratory", "Laboratory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Laboratory>("Cerebello.Model.FK_Medicine_MedicineLaboratory", "Laboratory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Laboratory> LaboratoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Laboratory>("Cerebello.Model.FK_Medicine_MedicineLaboratory", "Laboratory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Laboratory>("Cerebello.Model.FK_Medicine_MedicineLaboratory", "Laboratory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "MedicineActiveIngredient", "ActiveIngredient")]
        public EntityCollection<ActiveIngredient> ActiveIngredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActiveIngredient>("Cerebello.Model.MedicineActiveIngredient", "ActiveIngredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActiveIngredient>("Cerebello.Model.MedicineActiveIngredient", "ActiveIngredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ReceiptMedicine_Medicine", "ReceiptMedicine")]
        public EntityCollection<ReceiptMedicine> ReceiptMedicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptMedicine>("Cerebello.Model.FK_ReceiptMedicine_Medicine", "ReceiptMedicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptMedicine>("Cerebello.Model.FK_ReceiptMedicine_Medicine", "ReceiptMedicine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "MedicineLeaflet", "Leaflet")]
        public EntityCollection<Leaflet> Leaflets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leaflet>("Cerebello.Model.MedicineLeaflet", "Leaflet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leaflet>("Cerebello.Model.MedicineLeaflet", "Leaflet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="ModelMedicalCertificate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModelMedicalCertificate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModelMedicalCertificate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        public static ModelMedicalCertificate CreateModelMedicalCertificate(global::System.Int32 id, global::System.String name, global::System.String text, global::System.Int32 doctorId)
        {
            ModelMedicalCertificate modelMedicalCertificate = new ModelMedicalCertificate();
            modelMedicalCertificate.Id = id;
            modelMedicalCertificate.Name = name;
            modelMedicalCertificate.Text = text;
            modelMedicalCertificate.DoctorId = doctorId;
            return modelMedicalCertificate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificateField")]
        public EntityCollection<ModelMedicalCertificateField> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModelMedicalCertificateField>("Cerebello.Model.FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificateField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModelMedicalCertificateField>("Cerebello.Model.FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificateField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ModelMedicalCertificate_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_ModelMedicalCertificate_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_ModelMedicalCertificate_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_ModelMedicalCertificate_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_ModelMedicalCertificate_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_MedicalCertificate_ModelMedicalCertificate", "MedicalCertificate")]
        public EntityCollection<MedicalCertificate> MedicalCertificates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_ModelMedicalCertificate", "MedicalCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_ModelMedicalCertificate", "MedicalCertificate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="ModelMedicalCertificateField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModelMedicalCertificateField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModelMedicalCertificateField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modelMedicalCertificateId">Initial value of the ModelMedicalCertificateId property.</param>
        public static ModelMedicalCertificateField CreateModelMedicalCertificateField(global::System.Int32 id, global::System.String name, global::System.Int32 modelMedicalCertificateId)
        {
            ModelMedicalCertificateField modelMedicalCertificateField = new ModelMedicalCertificateField();
            modelMedicalCertificateField.Id = id;
            modelMedicalCertificateField.Name = name;
            modelMedicalCertificateField.ModelMedicalCertificateId = modelMedicalCertificateId;
            return modelMedicalCertificateField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelMedicalCertificateId
        {
            get
            {
                return _ModelMedicalCertificateId;
            }
            set
            {
                OnModelMedicalCertificateIdChanging(value);
                ReportPropertyChanging("ModelMedicalCertificateId");
                _ModelMedicalCertificateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelMedicalCertificateId");
                OnModelMedicalCertificateIdChanged();
            }
        }
        private global::System.Int32 _ModelMedicalCertificateId;
        partial void OnModelMedicalCertificateIdChanging(global::System.Int32 value);
        partial void OnModelMedicalCertificateIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificate")]
        public ModelMedicalCertificate ModelMedicalCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ModelMedicalCertificate> ModelMedicalCertificateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ModelMedicalCertificate>("Cerebello.Model.FK_ModelMedicalCertificateField_ModelMedicalCertificate", "ModelMedicalCertificate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.Int32 doctorId, global::System.Int32 personId)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.DoctorId = doctorId;
            patient.PersonId = personId;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CoverageId
        {
            get
            {
                return _CoverageId;
            }
            set
            {
                OnCoverageIdChanging(value);
                ReportPropertyChanging("CoverageId");
                _CoverageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageId");
                OnCoverageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CoverageId;
        partial void OnCoverageIdChanging(Nullable<global::System.Int32> value);
        partial void OnCoverageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Registration
        {
            get
            {
                return _Registration;
            }
            set
            {
                OnRegistrationChanging(value);
                ReportPropertyChanging("Registration");
                _Registration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Registration");
                OnRegistrationChanged();
            }
        }
        private global::System.String _Registration;
        partial void OnRegistrationChanging(global::System.String value);
        partial void OnRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Patient_Coverage", "Coverage")]
        public Coverage Coverage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Cerebello.Model.FK_Patient_Coverage", "Coverage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Cerebello.Model.FK_Patient_Coverage", "Coverage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> CoverageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("Cerebello.Model.FK_Patient_Coverage", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("Cerebello.Model.FK_Patient_Coverage", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Patient_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Patient_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Patient_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_Patient_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_Patient_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Patient_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Patient_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Patient_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Patient_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Cerebello.Model.FK_Patient_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Receipt_Patient", "Receipt")]
        public EntityCollection<Receipt> Receipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("Cerebello.Model.FK_Receipt_Patient", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("Cerebello.Model.FK_Receipt_Patient", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Anamnese_Patient", "Anamnese")]
        public EntityCollection<Anamnese> Anamneses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Anamnese>("Cerebello.Model.FK_Anamnese_Patient", "Anamnese");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Anamnese>("Cerebello.Model.FK_Anamnese_Patient", "Anamnese", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Appointment_Patient", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("Cerebello.Model.FK_Appointment_Patient", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("Cerebello.Model.FK_Appointment_Patient", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_MedicalCertificate_Patient", "MedicalCertificate")]
        public EntityCollection<MedicalCertificate> MedicalCertificates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_Patient", "MedicalCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalCertificate>("Cerebello.Model.FK_MedicalCertificate_Patient", "MedicalCertificate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationRequest_Patient", "ExaminationRequest")]
        public EntityCollection<ExaminationRequest> ExaminationRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExaminationRequest>("Cerebello.Model.FK_ExaminationRequest_Patient", "ExaminationRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExaminationRequest>("Cerebello.Model.FK_ExaminationRequest_Patient", "ExaminationRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationResult_Patient", "ExaminationResult")]
        public EntityCollection<ExaminationResult> ExaminationResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExaminationResult>("Cerebello.Model.FK_ExaminationResult_Patient", "ExaminationResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExaminationResult>("Cerebello.Model.FK_ExaminationResult_Patient", "ExaminationResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="urlIdentifier">Initial value of the UrlIdentifier property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String fullName, global::System.String urlIdentifier, global::System.DateTime createdOn, global::System.DateTime dateOfBirth, global::System.Int16 gender)
        {
            Person person = new Person();
            person.Id = id;
            person.FullName = fullName;
            person.UrlIdentifier = urlIdentifier;
            person.CreatedOn = createdOn;
            person.DateOfBirth = dateOfBirth;
            person.Gender = gender;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlIdentifier
        {
            get
            {
                return _UrlIdentifier;
            }
            set
            {
                OnUrlIdentifierChanging(value);
                ReportPropertyChanging("UrlIdentifier");
                _UrlIdentifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlIdentifier");
                OnUrlIdentifierChanged();
            }
        }
        private global::System.String _UrlIdentifier;
        partial void OnUrlIdentifierChanging(global::System.String value);
        partial void OnUrlIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Int16 _Gender;
        partial void OnGenderChanging(global::System.Int16 value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MaritalStatus
        {
            get
            {
                return _MaritalStatus;
            }
            set
            {
                OnMaritalStatusChanging(value);
                ReportPropertyChanging("MaritalStatus");
                _MaritalStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaritalStatus");
                OnMaritalStatusChanged();
            }
        }
        private Nullable<global::System.Int16> _MaritalStatus;
        partial void OnMaritalStatusChanging(Nullable<global::System.Int16> value);
        partial void OnMaritalStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CPF
        {
            get
            {
                return _CPF;
            }
            set
            {
                OnCPFChanging(value);
                ReportPropertyChanging("CPF");
                _CPF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CPF");
                OnCPFChanged();
            }
        }
        private global::System.String _CPF;
        partial void OnCPFChanging(global::System.String value);
        partial void OnCPFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CPFOwner
        {
            get
            {
                return _CPFOwner;
            }
            set
            {
                OnCPFOwnerChanging(value);
                ReportPropertyChanging("CPFOwner");
                _CPFOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CPFOwner");
                OnCPFOwnerChanged();
            }
        }
        private Nullable<global::System.Int16> _CPFOwner;
        partial void OnCPFOwnerChanging(Nullable<global::System.Int16> value);
        partial void OnCPFOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Profession
        {
            get
            {
                return _Profession;
            }
            set
            {
                OnProfessionChanging(value);
                ReportPropertyChanging("Profession");
                _Profession = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Profession");
                OnProfessionChanged();
            }
        }
        private global::System.String _Profession;
        partial void OnProfessionChanging(global::System.String value);
        partial void OnProfessionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Address_Person", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("Cerebello.Model.FK_Address_Person", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("Cerebello.Model.FK_Address_Person", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Email_Person", "Email")]
        public EntityCollection<Email> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("Cerebello.Model.FK_Email_Person", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("Cerebello.Model.FK_Email_Person", "Email", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Patient_Person", "Patient")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("Cerebello.Model.FK_Patient_Person", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("Cerebello.Model.FK_Patient_Person", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Phone_Person", "Phone")]
        public EntityCollection<Phone> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phone>("Cerebello.Model.FK_Phone_Person", "Phone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phone>("Cerebello.Model.FK_Phone_Person", "Phone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Person", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Cerebello.Model.FK_User_Person", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Cerebello.Model.FK_User_Person", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Phone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Phone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Phone CreatePhone(global::System.Int32 id, global::System.Int32 personId, global::System.String number, global::System.Int32 type)
        {
            Phone phone = new Phone();
            phone.Id = id;
            phone.PersonId = personId;
            phone.Number = number;
            phone.Type = type;
            return phone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Phone_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Phone_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Phone_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_Phone_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Cerebello.Model.FK_Phone_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Practice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Practice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Practice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="urlIdentifier">Initial value of the UrlIdentifier property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="windowsTimeZoneId">Initial value of the WindowsTimeZoneId property.</param>
        public static Practice CreatePractice(global::System.Int32 id, global::System.String name, global::System.String urlIdentifier, global::System.DateTime createdOn, global::System.String windowsTimeZoneId)
        {
            Practice practice = new Practice();
            practice.Id = id;
            practice.Name = name;
            practice.UrlIdentifier = urlIdentifier;
            practice.CreatedOn = createdOn;
            practice.WindowsTimeZoneId = windowsTimeZoneId;
            return practice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlIdentifier
        {
            get
            {
                return _UrlIdentifier;
            }
            set
            {
                OnUrlIdentifierChanging(value);
                ReportPropertyChanging("UrlIdentifier");
                _UrlIdentifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlIdentifier");
                OnUrlIdentifierChanged();
            }
        }
        private global::System.String _UrlIdentifier;
        partial void OnUrlIdentifierChanging(global::System.String value);
        partial void OnUrlIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerId;
        partial void OnOwnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WindowsTimeZoneId
        {
            get
            {
                return _WindowsTimeZoneId;
            }
            set
            {
                OnWindowsTimeZoneIdChanging(value);
                ReportPropertyChanging("WindowsTimeZoneId");
                _WindowsTimeZoneId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WindowsTimeZoneId");
                OnWindowsTimeZoneIdChanged();
            }
        }
        private global::System.String _WindowsTimeZoneId;
        partial void OnWindowsTimeZoneIdChanging(global::System.String value);
        partial void OnWindowsTimeZoneIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Practice_User", "User")]
        public User Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Cerebello.Model.FK_Practice_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Cerebello.Model.FK_Practice_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Cerebello.Model.FK_Practice_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Cerebello.Model.FK_Practice_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Practice", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Cerebello.Model.FK_User_Practice", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Cerebello.Model.FK_User_Practice", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receipt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Receipt CreateReceipt(global::System.Int32 id, global::System.Int32 patientId, global::System.DateTime createdOn)
        {
            Receipt receipt = new Receipt();
            receipt.Id = id;
            receipt.PatientId = patientId;
            receipt.CreatedOn = createdOn;
            return receipt;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Receipt_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Receipt_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Receipt_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("Cerebello.Model.FK_Receipt_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("Cerebello.Model.FK_Receipt_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ReceiptMedicine_Receipt", "ReceiptMedicine")]
        public EntityCollection<ReceiptMedicine> ReceiptMedicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptMedicine>("Cerebello.Model.FK_ReceiptMedicine_Receipt", "ReceiptMedicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptMedicine>("Cerebello.Model.FK_ReceiptMedicine_Receipt", "ReceiptMedicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="ReceiptMedicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptMedicine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptMedicine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="prescription">Initial value of the Prescription property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="medicineId">Initial value of the MedicineId property.</param>
        public static ReceiptMedicine CreateReceiptMedicine(global::System.Int32 id, global::System.String quantity, global::System.String prescription, global::System.Int32 receiptId, global::System.Int32 medicineId)
        {
            ReceiptMedicine receiptMedicine = new ReceiptMedicine();
            receiptMedicine.Id = id;
            receiptMedicine.Quantity = quantity;
            receiptMedicine.Prescription = prescription;
            receiptMedicine.ReceiptId = receiptId;
            receiptMedicine.MedicineId = medicineId;
            return receiptMedicine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prescription
        {
            get
            {
                return _Prescription;
            }
            set
            {
                OnPrescriptionChanging(value);
                ReportPropertyChanging("Prescription");
                _Prescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prescription");
                OnPrescriptionChanged();
            }
        }
        private global::System.String _Prescription;
        partial void OnPrescriptionChanging(global::System.String value);
        partial void OnPrescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Int32 _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Int32 value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId
        {
            get
            {
                return _MedicineId;
            }
            set
            {
                OnMedicineIdChanging(value);
                ReportPropertyChanging("MedicineId");
                _MedicineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineId");
                OnMedicineIdChanged();
            }
        }
        private global::System.Int32 _MedicineId;
        partial void OnMedicineIdChanging(global::System.Int32 value);
        partial void OnMedicineIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ReceiptMedicine_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("Cerebello.Model.FK_ReceiptMedicine_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("Cerebello.Model.FK_ReceiptMedicine_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("Cerebello.Model.FK_ReceiptMedicine_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("Cerebello.Model.FK_ReceiptMedicine_Receipt", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ReceiptMedicine_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("Cerebello.Model.FK_ReceiptMedicine_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("Cerebello.Model.FK_ReceiptMedicine_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("Cerebello.Model.FK_ReceiptMedicine_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("Cerebello.Model.FK_ReceiptMedicine_Medicine", "Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="Secretary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Secretary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Secretary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Secretary CreateSecretary(global::System.Int32 id)
        {
            Secretary secretary = new Secretary();
            secretary.Id = id;
            return secretary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Secretary", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Cerebello.Model.FK_User_Secretary", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Cerebello.Model.FK_User_Secretary", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_ActiveIngredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_ActiveIngredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_ActiveIngredient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SYS_ActiveIngredient CreateSYS_ActiveIngredient(global::System.Int32 id, global::System.String name)
        {
            SYS_ActiveIngredient sYS_ActiveIngredient = new SYS_ActiveIngredient();
            sYS_ActiveIngredient.Id = id;
            sYS_ActiveIngredient.Name = name;
            return sYS_ActiveIngredient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "SYS_MedicineActiveIngredient", "SYS_Medicine")]
        public EntityCollection<SYS_Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SYS_Medicine>("Cerebello.Model.SYS_MedicineActiveIngredient", "SYS_Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SYS_Medicine>("Cerebello.Model.SYS_MedicineActiveIngredient", "SYS_Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_Holiday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_Holiday : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_Holiday object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="monthAndDay">Initial value of the MonthAndDay property.</param>
        public static SYS_Holiday CreateSYS_Holiday(global::System.Int32 id, global::System.String name, global::System.Int32 monthAndDay)
        {
            SYS_Holiday sYS_Holiday = new SYS_Holiday();
            sYS_Holiday.Id = id;
            sYS_Holiday.Name = name;
            sYS_Holiday.MonthAndDay = monthAndDay;
            return sYS_Holiday;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Base 1 month of year * 100 + base 1 day of month.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthAndDay
        {
            get
            {
                return _MonthAndDay;
            }
            set
            {
                OnMonthAndDayChanging(value);
                ReportPropertyChanging("MonthAndDay");
                _MonthAndDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthAndDay");
                OnMonthAndDayChanged();
            }
        }
        private global::System.Int32 _MonthAndDay;
        partial void OnMonthAndDayChanging(global::System.Int32 value);
        partial void OnMonthAndDayChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_Laboratory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_Laboratory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_Laboratory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SYS_Laboratory CreateSYS_Laboratory(global::System.Int32 id, global::System.String name)
        {
            SYS_Laboratory sYS_Laboratory = new SYS_Laboratory();
            sYS_Laboratory.Id = id;
            sYS_Laboratory.Name = name;
            return sYS_Laboratory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_SYS_Medicine_SYS_Laboratory", "SYS_Medicine")]
        public EntityCollection<SYS_Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SYS_Medicine>("Cerebello.Model.FK_SYS_Medicine_SYS_Laboratory", "SYS_Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SYS_Medicine>("Cerebello.Model.FK_SYS_Medicine_SYS_Laboratory", "SYS_Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_Leaflet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_Leaflet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_Leaflet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static SYS_Leaflet CreateSYS_Leaflet(global::System.Int32 id, global::System.String url)
        {
            SYS_Leaflet sYS_Leaflet = new SYS_Leaflet();
            sYS_Leaflet.Id = id;
            sYS_Leaflet.Url = url;
            return sYS_Leaflet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "SYS_MedicineLeaflet", "SYS_Medicine")]
        public EntityCollection<SYS_Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SYS_Medicine>("Cerebello.Model.SYS_MedicineLeaflet", "SYS_Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SYS_Medicine>("Cerebello.Model.SYS_MedicineLeaflet", "SYS_Medicine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_MedicalEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_MedicalEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_MedicalEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SYS_MedicalEntity CreateSYS_MedicalEntity(global::System.Int32 id, global::System.String name)
        {
            SYS_MedicalEntity sYS_MedicalEntity = new SYS_MedicalEntity();
            sYS_MedicalEntity.Id = id;
            sYS_MedicalEntity.Name = name;
            return sYS_MedicalEntity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Doctor_MedicalEntity1", "Doctor")]
        public EntityCollection<Doctor> Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor>("Cerebello.Model.FK_Doctor_MedicalEntity1", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor>("Cerebello.Model.FK_Doctor_MedicalEntity1", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_MedicalProcedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_MedicalProcedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_MedicalProcedure object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SYS_MedicalProcedure CreateSYS_MedicalProcedure(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            SYS_MedicalProcedure sYS_MedicalProcedure = new SYS_MedicalProcedure();
            sYS_MedicalProcedure.Id = id;
            sYS_MedicalProcedure.Code = code;
            sYS_MedicalProcedure.Name = name;
            return sYS_MedicalProcedure;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationRequest_SYS_MedicalProcedures11", "ExaminationRequest")]
        public EntityCollection<ExaminationRequest> ExaminationRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExaminationRequest>("Cerebello.Model.FK_ExaminationRequest_SYS_MedicalProcedures11", "ExaminationRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExaminationRequest>("Cerebello.Model.FK_ExaminationRequest_SYS_MedicalProcedures11", "ExaminationRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_ExaminationResult_SYS_MedicalProcedures1", "ExaminationResult")]
        public EntityCollection<ExaminationResult> ExaminationResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExaminationResult>("Cerebello.Model.FK_ExaminationResult_SYS_MedicalProcedures1", "ExaminationResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExaminationResult>("Cerebello.Model.FK_ExaminationResult_SYS_MedicalProcedures1", "ExaminationResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_MedicalSpecialty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_MedicalSpecialty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_MedicalSpecialty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SYS_MedicalSpecialty CreateSYS_MedicalSpecialty(global::System.Int32 id, global::System.String name)
        {
            SYS_MedicalSpecialty sYS_MedicalSpecialty = new SYS_MedicalSpecialty();
            sYS_MedicalSpecialty.Id = id;
            sYS_MedicalSpecialty.Name = name;
            return sYS_MedicalSpecialty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Doctor_MedicalSpecialty1", "Doctor")]
        public EntityCollection<Doctor> Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor>("Cerebello.Model.FK_Doctor_MedicalSpecialty1", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor>("Cerebello.Model.FK_Doctor_MedicalSpecialty1", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="SYS_Medicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SYS_Medicine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SYS_Medicine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SYS_Medicine CreateSYS_Medicine(global::System.Int32 id, global::System.String name)
        {
            SYS_Medicine sYS_Medicine = new SYS_Medicine();
            sYS_Medicine.Id = id;
            sYS_Medicine.Name = name;
            return sYS_Medicine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LaboratoryId
        {
            get
            {
                return _LaboratoryId;
            }
            set
            {
                OnLaboratoryIdChanging(value);
                ReportPropertyChanging("LaboratoryId");
                _LaboratoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaboratoryId");
                OnLaboratoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LaboratoryId;
        partial void OnLaboratoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnLaboratoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Decription
        {
            get
            {
                return _Decription;
            }
            set
            {
                OnDecriptionChanging(value);
                ReportPropertyChanging("Decription");
                _Decription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Decription");
                OnDecriptionChanged();
            }
        }
        private global::System.String _Decription;
        partial void OnDecriptionChanging(global::System.String value);
        partial void OnDecriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_SYS_Medicine_SYS_Laboratory", "SYS_Laboratory")]
        public SYS_Laboratory Laboratory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_Laboratory>("Cerebello.Model.FK_SYS_Medicine_SYS_Laboratory", "SYS_Laboratory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_Laboratory>("Cerebello.Model.FK_SYS_Medicine_SYS_Laboratory", "SYS_Laboratory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SYS_Laboratory> LaboratoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SYS_Laboratory>("Cerebello.Model.FK_SYS_Medicine_SYS_Laboratory", "SYS_Laboratory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SYS_Laboratory>("Cerebello.Model.FK_SYS_Medicine_SYS_Laboratory", "SYS_Laboratory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "SYS_MedicineActiveIngredient", "SYS_ActiveIngredient")]
        public EntityCollection<SYS_ActiveIngredient> ActiveIngredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SYS_ActiveIngredient>("Cerebello.Model.SYS_MedicineActiveIngredient", "SYS_ActiveIngredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SYS_ActiveIngredient>("Cerebello.Model.SYS_MedicineActiveIngredient", "SYS_ActiveIngredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "SYS_MedicineLeaflet", "SYS_Leaflet")]
        public EntityCollection<SYS_Leaflet> Leaflets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SYS_Leaflet>("Cerebello.Model.SYS_MedicineLeaflet", "SYS_Leaflet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SYS_Leaflet>("Cerebello.Model.SYS_MedicineLeaflet", "SYS_Leaflet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cerebello.Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="practiceId">Initial value of the PracticeId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="userNameNormalized">Initial value of the UserNameNormalized property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String password, global::System.String passwordSalt, global::System.Int32 personId, global::System.Int32 practiceId, global::System.String userName, global::System.String userNameNormalized)
        {
            User user = new User();
            user.Id = id;
            user.Password = password;
            user.PasswordSalt = passwordSalt;
            user.PersonId = personId;
            user.PracticeId = practiceId;
            user.UserName = userName;
            user.UserNameNormalized = userNameNormalized;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActiveOn
        {
            get
            {
                return _LastActiveOn;
            }
            set
            {
                OnLastActiveOnChanging(value);
                ReportPropertyChanging("LastActiveOn");
                _LastActiveOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActiveOn");
                OnLastActiveOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActiveOn;
        partial void OnLastActiveOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActiveOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GravatarEmailHash
        {
            get
            {
                return _GravatarEmailHash;
            }
            set
            {
                OnGravatarEmailHashChanging(value);
                ReportPropertyChanging("GravatarEmailHash");
                _GravatarEmailHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GravatarEmailHash");
                OnGravatarEmailHashChanged();
            }
        }
        private global::System.String _GravatarEmailHash;
        partial void OnGravatarEmailHashChanging(global::System.String value);
        partial void OnGravatarEmailHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoctorId;
        partial void OnDoctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecretaryId
        {
            get
            {
                return _SecretaryId;
            }
            set
            {
                OnSecretaryIdChanging(value);
                ReportPropertyChanging("SecretaryId");
                _SecretaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecretaryId");
                OnSecretaryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SecretaryId;
        partial void OnSecretaryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSecretaryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PracticeId
        {
            get
            {
                return _PracticeId;
            }
            set
            {
                OnPracticeIdChanging(value);
                ReportPropertyChanging("PracticeId");
                _PracticeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PracticeId");
                OnPracticeIdChanged();
            }
        }
        private global::System.Int32 _PracticeId;
        partial void OnPracticeIdChanging(global::System.Int32 value);
        partial void OnPracticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdministratorId
        {
            get
            {
                return _AdministratorId;
            }
            set
            {
                OnAdministratorIdChanging(value);
                ReportPropertyChanging("AdministratorId");
                _AdministratorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdministratorId");
                OnAdministratorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdministratorId;
        partial void OnAdministratorIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdministratorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserNameNormalized
        {
            get
            {
                return _UserNameNormalized;
            }
            set
            {
                OnUserNameNormalizedChanging(value);
                ReportPropertyChanging("UserNameNormalized");
                _UserNameNormalized = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserNameNormalized");
                OnUserNameNormalizedChanged();
            }
        }
        private global::System.String _UserNameNormalized;
        partial void OnUserNameNormalizedChanging(global::System.String value);
        partial void OnUserNameNormalizedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Appointment_User", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("Cerebello.Model.FK_Appointment_User", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("Cerebello.Model.FK_Appointment_User", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_User_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_User_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Cerebello.Model.FK_User_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Cerebello.Model.FK_User_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_Practice_User", "Practice")]
        public EntityCollection<Practice> PracticesIOwn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Practice>("Cerebello.Model.FK_Practice_User", "Practice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Practice>("Cerebello.Model.FK_Practice_User", "Practice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_User_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_User_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("Cerebello.Model.FK_User_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("Cerebello.Model.FK_User_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Practice", "Practice")]
        public Practice Practice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("Cerebello.Model.FK_User_Practice", "Practice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("Cerebello.Model.FK_User_Practice", "Practice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Practice> PracticeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("Cerebello.Model.FK_User_Practice", "Practice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Practice>("Cerebello.Model.FK_User_Practice", "Practice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Secretary", "Secretary")]
        public Secretary Secretary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Secretary>("Cerebello.Model.FK_User_Secretary", "Secretary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Secretary>("Cerebello.Model.FK_User_Secretary", "Secretary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Secretary> SecretaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Secretary>("Cerebello.Model.FK_User_Secretary", "Secretary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Secretary>("Cerebello.Model.FK_User_Secretary", "Secretary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cerebello.Model", "FK_User_Administrator", "Administrator")]
        public Administrator Administrator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Administrator>("Cerebello.Model.FK_User_Administrator", "Administrator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Administrator>("Cerebello.Model.FK_User_Administrator", "Administrator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Administrator> AdministratorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Administrator>("Cerebello.Model.FK_User_Administrator", "Administrator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Administrator>("Cerebello.Model.FK_User_Administrator", "Administrator", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
