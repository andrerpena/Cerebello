@using System.Globalization
@using Cerebello.Model

@model CerebelloWebRole.WorkerRole.Code.Workers.PatientEmailModel
@{
    this.ViewBag.Title = string.Format("Confirmação de consulta - {0}", this.Model.PracticeName);
    
    var dr = this.Model.DoctorGender == TypeGender.Male ? "Dr." : "Dra.";
    var o_dr = this.Model.DoctorGender == TypeGender.Male ? "o Dr." : "a Dra.";
    var contactDoctor = string.Format("{0} {1}", dr, this.Model.DoctorFirstName);
    var contactPractice = string.Format("{0}", this.Model.PracticeName);

    var hasDoctorContact = new[] { this.Model.DoctorPhone, this.Model.DoctorEmail }.AnyFilled();
    var hasPracticeContact = !string.IsNullOrWhiteSpace(string.Format("{0}{1}", this.Model.PracticePhoneMain, this.Model.PracticeEmail));
}
@if (this.ViewBag.IsBodyHtml == true)
{
    <html>
    <head>
        <title>@this.ViewBag.Title</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        @if (DebugConfig.UseFileSystemEmailBox)
        {
            <style type="text/css">
                /* GMAIL style (only when local presentation) */
                /* Style tags have no effect in e-mails */
                body {
                    font-size: 13px;
                    font-family: arial, sans-serif;
                    color: #222;
                    background: white;
                }
            </style>
        }
    </head>
    <body style="font-family: arial, sans-serif; color: #222; background: white;">
        <p>
            @(Model.PatientGender == TypeGender.Male ? "Prezado" : "Prezada") @Model.PatientFirstName,
        </p>
        <br />
        <p>
            Estamos entrando em contato para lhe lembrar de sua consulta, com
            @o_dr @Model.DoctorFirstName, na seguinte data:
            <strong>@Model.AppointmentDate.ToString(CultureInfo.CreateSpecificCulture("pt-BR"))</strong>.
        </p>
        <br />
        <p>
            Qualquer dúvida, entre em contato conosco.
        </p>
        <br />
        <h2>@contactPractice</h2>
        @if (new[] { this.Model.PracticePhoneMain, this.Model.PracticePhoneAlt, this.Model.PracticePabx, this.Model.PracticeEmail, this.Model.PracticeSiteUrl }.AnyFilled())
        {
            <h3>Contato</h3>
            <ul>
                @if (new[] { this.Model.PracticePhoneMain, this.Model.PracticePhoneAlt }.AnyFilled())
            {
                    <li>telefone: @Model.PracticePhoneMain@{
                if (new[] { this.Model.PracticePhoneAlt }.AnyFilled())
                {
                        <text> <i>-ou-</i> @Model.PracticePhoneAlt</text>
                }
                    }</li>
            }
                @if (new[] { this.Model.PracticeEmail }.AnyFilled())
            {
                    <li>e-mail: @Model.PracticeEmail</li>
            }
                @if (new[] { this.Model.PracticePabx }.AnyFilled())
            {
                    <li>PABX: @Model.PracticePabx</li>
            }
            </ul>
            if (new[] { this.Model.PracticeSiteUrl }.AnyFilled())
            {
            <h3>Site</h3>
            <ul>
                <li>@Model.PracticeSiteUrl</li>
            </ul>
            }
            if (new[] { this.Model.PracticeAddress.ZipCode, this.Model.PracticeAddress.AddressLine1 }.AnyFilled())
            {
            <h3>Endereço</h3>
            <ul>
                @if (new[] { this.Model.PracticeAddress.ZipCode }.AnyFilled())
            {
                    <li><b>ZipCode:</b> @Model.PracticeAddress.ZipCode</li>
            }
                @if (new[] { this.Model.PracticeAddress.AddressLine1 }.AnyFilled())
            {
                    <li>Rua/Av @(string.Join(",\r\n    ", new[] {
                     Model.PracticeAddress.AddressLine1,
                     Model.PracticeAddress.AddressLine2,
                     Model.PracticeAddress.City,
                     Model.PracticeAddress.StateProvince,
                     Model.PracticeAddress.AddressLine2 }
                     .Where(s => !string.IsNullOrWhiteSpace(s))))
                    </li>
            }
            </ul>
            }
            <br />
        }
        @if (true)
        {
            <p>
                Por favor, não responda este e-mail.
            </p>
        }
        else
        {
            <p>
                Ou então simplesmente respondendo este e-mail.
            </p>
        }
        <br />
        <p>Atenciosamente,</p>
        <p style="padding-left: 2em; color: darkslategray">@Model.DoctorFirstName</p>
        <br />

        @*
        Link no qual o paciente pode ver suas consultas marcadas, e interagir com o consultório
        Visit: <a href="@Url.Action("Index", "PracticeHome", new { area = "App", practice = this.Model.PracticeUrlId }, "https")">PracticeHome</a>
        *@

        <p style="padding-left: 2em; color: gray; font-style: italic">
            Powered by <a href="@Url.Action("Index", "Home", new { }, "https")">@Constants.EMAIL_POWEREDBY</a>
        </p>
    </body>
    </html>
    return;
}
@(Model.PatientGender == TypeGender.Male ? "Prezado" : "Prezada") @Model.PatientFirstName,

    Estamos entrando em contato para
lhe lembrar de sua consulta, com @o_dr
@Model.DoctorFirstName,
na seguinte data:

@Model.AppointmentDate.ToString(CultureInfo.CreateSpecificCulture("pt-BR"))

Qualquer dúvida, entre em contato conosco.

@contactPractice
@(new string('-', contactPractice.Length))
@if (new[] { this.Model.PracticePhoneMain, this.Model.PracticePhoneAlt, this.Model.PracticePabx, this.Model.PracticeEmail, this.Model.PracticeSiteUrl }.AnyFilled())
{
    @:
    @:Contato
        if (new[] { this.Model.PracticePhoneMain, this.Model.PracticePhoneAlt }.AnyFilled())
        {
    @:  telefone: @Model.PracticePhoneMain@{if (new[] { this.Model.PracticePhoneAlt }.AnyFilled())
                                            {<text> -ou- @Model.PracticePhoneAlt</text>}}
        }
        if (new[] { this.Model.PracticeEmail }.AnyFilled())
        {
    @:  e-mail: @Model.PracticeEmail
        }
        if (new[] { this.Model.PracticePabx }.AnyFilled())
        {
    @:  PABX: @Model.PracticePabx
        }
        if (new[] { this.Model.PracticeSiteUrl }.AnyFilled())
        {
    @:
    @:Site
    @:  @Model.PracticeSiteUrl
        }
        if (new[] { this.Model.PracticeAddress.ZipCode, this.Model.PracticeAddress.AddressLine1 }.AnyFilled())
        {
    @:
    @:Endereço
        if (new[] { this.Model.PracticeAddress.ZipCode }.AnyFilled())
        {
    @:  ZipCode: @Model.PracticeAddress.ZipCode
        }
        if (new[] { this.Model.PracticeAddress.AddressLine1 }.AnyFilled())
        {
    @:  Rua/Av @(string.Join(",\r\n    ", new[] {
                 Model.PracticeAddress.AddressLine1,
                 Model.PracticeAddress.AddressLine2,
                 Model.PracticeAddress.City,
                 Model.PracticeAddress.StateProvince,
                 Model.PracticeAddress.AddressLine2 }
                 .Where(s => !string.IsNullOrWhiteSpace(s))))
        }
        }
    @:
}
@if (true)
{
    @:Por favor, não responda este e-mail.
}
else
{
    @:Ou então simplesmente respondendo este e-mail.
}

@*
    Link no qual o paciente pode ver suas consultas marcadas, e interagir com o consultório
    Visit: <a href="@Url.Action("Index", "PracticeHome", new { area = "App", practice = this.Model.PracticeUrlId }, "https")">PracticeHome</a>
*@

Atenciosamente,
    @Model.DoctorFirstName


@(">> Powered by cerebello <<")
@Url.Action("Index", "Home", new { }, "https")