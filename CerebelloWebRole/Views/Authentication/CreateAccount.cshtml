@using CerebelloWebRole.Areas.App.Models
@using CerebelloWebRole.Models
@model CerebelloWebRole.Models.CreateAccountViewModel
@{
    ViewBag.Title = "Login";

    // These objects must be filled, otherwise obscure exceptions may happen.
    // - ViewBag.MedicalSpecialtyOptions
    // - ViewBag.MedicalEntityOptions
    if (!(this.ViewBag.MedicalSpecialtyOptions is IEnumerable<SelectListItem>))
    {
        throw new Exception("ViewBag.MedicalSpecialtyOptions is not of type 'IEnumerable<SelectListItem>'.");
    }
    if (!(this.ViewBag.MedicalSpecialtyOptions is IEnumerable<SelectListItem>))
    {
        throw new Exception("ViewBag.MedicalEntityOptions is not of type 'IEnumerable<SelectListItem>'.");
    }
}
@section Scripts {
    <script src="@Url.Content("~/Scripts/scripts.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Controls/jquery.cerebello.autocomplete.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $('#IsDoctor').change(function () {
                if ($(this).is(':checked')) $('.doctor-info').show();
                else $('.doctor-info').hide();
            });
            if ($('#IsDoctor').is(':checked')) $('.doctor-info').show();
            else $('.doctor-info').hide();
        });
    </script>
}
@section Header
{
    <link href="@Url.Content("~/Content/Styles/App/Controls/jquery.cerebello.autocomplete.css")" rel="stylesheet" type="text/css" />
}
<div class="authentication-container">
    <div class="authentication-container-wrapper">
        <div class="header">
            <h2>Criar uma conta no Cerebello</h2>
        </div>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { style = "margin:0" }))
        {
            <fieldset>
                <div class="controls-wrapper">
                    @*Properties of the practice*@
                    <div class="control-group">
                        @Html.LabelFor(model => model.PracticeName)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.PracticeName, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.PracticeTimeZone)
                        <div class="controls">
                            @Html.EnumDropdownListFor(model => model.PracticeTimeZone)
                        </div>
                    </div>
                    <hr />
                    @*Properties of the user as a person and as a doctor*@
                    <div class="control-group">
                        @Html.LabelFor(model => model.FullName)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.FullName, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.Gender)
                        <div class="controls">
                            @Html.EnumDropdownListFor(model => model.Gender)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.DateOfBirth)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.DateOfBirth)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.IsDoctor)
                        <div class="controls">
                            @Html.CheckBoxFor(model => model.IsDoctor)
                        </div>
                    </div>
                    <div class="control-group doctor-info" style="@(this.Model == null || !this.Model.IsDoctor ? "display: none" : "")" >
                        @Html.LabelFor(model => model.MedicalEntityId)
                        <div class="controls">
                            @Html.DropDownListFor(
                                m => m.MedicalEntityId,
                                (IEnumerable<SelectListItem>)this.ViewBag.MedicalEntityOptions,
                                "")
                        </div>
                    </div>
                    <div class="control-group doctor-info" style="@(this.Model == null || !this.Model.IsDoctor ? "display: none" : "")" >
                        @Html.LabelFor(model => model.MedicalEntityJurisdiction)
                        <div class="controls">
                            @Html.EnumDropdownListFor(model => model.MedicalEntityJurisdiction)
                        </div>
                    </div>
                    <div class="control-group doctor-info" style="@(this.Model == null || !this.Model.IsDoctor ? "display: none" : "")" >
                        @Html.LabelFor(model => model.MedicCRM)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.MedicCRM)
                        </div>
                    </div>
                    <div class="control-group doctor-info" style="@(this.Model == null || !this.Model.IsDoctor ? "display: none" : "")" >
                        @Html.LabelFor(model => model.MedicalSpecialtyId)
                        <div class="controls">
                            @(Html.AutocompleteGridFor<CreateAccountViewModel, MedicalSpecialtiesLookupGridModel, int?>(
                                m => m.MedicalSpecialtyId,
                                m => m.MedicalSpecialtyName,
                                Url.Action("LookupMedicalSpecialties", "MedicalSpecialties"),
                                pm => pm.Id,
                                pm => pm.Name,
                                pm => pm.Code
                            ))
                        </div>
                    </div>
                    <hr />
                    @* Properties of the user as an user *@
                    <div class="control-group">
                        @Html.LabelFor(model => model.UserName)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.UserName, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.EMail)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EMail, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.Password)
                        <div class="controls">
                            @Html.PasswordFor(model => model.Password, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.ConfirmPassword)
                        <div class="controls">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "input-xlarge" })
                        </div>
                    </div>
                </div>
                <div class="form-actions" style="margin: 0">
                    <button class="btn btn-primary btn-large" type="submit">
                        Criar conta</button>
                </div>
            </fieldset>
        }
        <script type="text/javascript">
            $("#DateOfBirth").mask("99/99/9999");
        </script>
    </div>
</div>
