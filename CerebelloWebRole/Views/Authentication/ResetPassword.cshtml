
@model ResetPasswordViewModel
@{
    this.Layout = "../Shared/_AuthenticationLayout.cshtml";
    ViewBag.Title = "Informações para redefinir senha";
}
<div class="authentication-container">
    <div class="authentication-container-wrapper">
        <div class="header">
            <h2>@ViewBag.Title</h2>
        </div>
        @if (this.ViewBag.CannotRedefinePassword == true)
        {
            <div class="controls-wrapper">
                <div class="alert alert-block alert-error fade in">
                    <p>Não existe nenhuma requisição para fazer alteração de senha.</p>
                </div>
                <p>Esta requisição para alterar a sua senha não existe.</p>
                <p>Se você deseja realmente redefinir sua senha, siga o link: <a href="@Url.Action("ResetPasswordRequest")">Requisitar alteração de senha</a></p>
                <p>Se você estiver com problemas em acessar sua conta, <a href="mailto:cerebello@cerebello.com.br">entre em contato conosco</a>.</p>
            </div>
        }
        else
        {
            using (Html.BeginForm(null, null, FormMethod.Post, new { style = "margin:0" }))
            {
            <div class="controls-wrapper">
                @if (this.Request.HttpMethod != "GET" && this.ViewData.ModelState.GetAllErrors().Any())
                {
                    <div class="alert alert-block alert-error fade in">
                        <button data-dismiss="alert" class="close" type="button">×</button>
                        @foreach (var eachModelError in this.ViewData.ModelState.GetAllErrors())
                        {
                            <p>@eachModelError.Item2.ErrorMessage</p>
                        }
                    </div>
                }

                <fieldset>
                    @* Token *@
                    @Html.HiddenFor(model => model.Token)

                    @* PracticeIdentifier *@
                    <div class="control-group">
                        @Html.LabelFor(model => model.PracticeIdentifier)
                        <div class="controls">
                            @Html.Raw(this.Model == null ? this.Request["PracticeIdentifier"] : this.Model.PracticeIdentifier)
                            @Html.HiddenFor(model => model.PracticeIdentifier)
                        </div>
                    </div>

                    @* UserNameOrEmail *@
                    <div class="control-group">
                        @Html.LabelFor(model => model.UserNameOrEmail)
                        <div class="controls">
                            @Html.Raw(this.Model == null ? this.Request["UserNameOrEmail"] : this.Model.UserNameOrEmail)
                            @Html.HiddenFor(model => model.UserNameOrEmail)
                        </div>
                    </div>

                    <hr />

                    @* NewPassword *@
                    <div class="control-group">
                        @Html.LabelFor(model => model.NewPassword)
                        <div class="controls">
                            @Html.PasswordFor(model => model.NewPassword, new { @class = "input-xlarge" })
                        </div>
                    </div>

                    @* ConfirmNewPassword *@
                    <div class="control-group">
                        @Html.LabelFor(model => model.ConfirmNewPassword)
                        <div class="controls">
                            @Html.PasswordFor(model => model.ConfirmNewPassword, new { @class = "input-xlarge" })
                        </div>
                    </div>

                </fieldset>
            </div>
                 
            <div class="form-actions" style="margin: 0">
                <button class="btn btn-primary btn-large" type="submit">
                    Redefinir senha</button>
            </div>
            }
        }
    </div>
</div>
