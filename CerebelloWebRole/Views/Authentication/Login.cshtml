@using CerebelloWebRole.Code
@model LoginViewModel
@{
    this.Layout = "../Shared/_AuthenticationLayout.cshtml";
    this.ViewBag.Title = "Login · Cerebello";
}
<div class="authentication-container">
    <div class="authentication-container-wrapper">
        <div class="header">
            <h2>Login <span class="optional">no Cerebello</span></h2>
            <div class="buttons-wrapper">
                <a class="btn btn-small" href="@Url.Action("Index", "Home")">Voltar</a>
                <a class="btn btn-small" href="@Url.Action("CreateAccount")">Criar uma conta</a>
            </div>
        </div>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { style = "margin:0" }))
        {
            <fieldset>
                <div class="controls-wrapper">
                    @if (this.ViewData.ModelState.GetAllErrors().Any())
                    {
                        <div class="alert alert-block alert-error fade in">
                            <button data-dismiss="alert" class="close" type="button">×</button>
                            @foreach (var eachModelError in this.ViewData.ModelState.GetAllErrors())
                            {
                                <p>@eachModelError.Item2.ErrorMessage</p>
                            }
                        </div>
                    }

                    <div class="control-group">
                        @Html.LabelFor(model => model.PracticeIdentifier)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.PracticeIdentifier, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.UserNameOrEmail)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.UserNameOrEmail, new { @class = "input-xlarge" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.Password)
                        <div class="controls">
                            @Html.PasswordFor(model => model.Password, new { @class = "input-xlarge" })
                            <p>
                                <a href="@Url.Action("ResetPasswordRequest")" title="Se você esqueceu sua senha clique aqui para criar uma nova senha.">Esqueceu sua senha?</a>
                            </p>
                        </div>
                    </div>
                    <div class="control-group">
                        <div class="controls" title="Só marque esta caixa se estiver usando um computador que não é compartilhado com outras pessoas.">
                            @Html.CheckBoxFor(model => model.RememberMe)
                            <label for="@Html.FieldName(model => model.RememberMe)" class = "remember-me">Lembrar de mim <span class="optional">neste computador</span></label>
                        </div>
                    </div>
                </div>
                <div class="form-actions" style="margin: 0">
                    <table>
                        <tr>
                            <td style="width: 100%">
                                <button class="btn btn-primary btn-large" type="submit">
                                    Login</button>
                            </td>
                            @if (!string.IsNullOrWhiteSpace(this.Request["ReturnUrl"]))
                            {
                                @Html.HiddenFor(m => m.ReturnUrl)
                                <td title="Use este botão caso já tenha feito login em outra janela.">
                                    <a style="white-space: nowrap" class="btn btn-mini" href="@this.Request["ReturnUrl"]">
                                        Tentar novamente</a>
                                </td>
                            }
                        </tr>
                    </table>
                </div>
            </fieldset>
        }
    </div>
</div>
