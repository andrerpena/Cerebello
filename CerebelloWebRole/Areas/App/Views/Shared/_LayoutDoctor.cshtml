@{
    Layout = "~/Areas/App/Views/Shared/_Layout.cshtml";

    var controllerName = ViewContext.RouteData.Values["controller"].ToString().ToLower();
    var configControllerNames = new string[] { "config", "configschedule", "modelmedicalcertificates", "configdocuments", "healthinsurance" };
    var practiceId = ViewBag.Practice.Id;
    var doctor = (CerebelloWebRole.Areas.App.Models.DoctorViewModel)ViewBag.Doctor;

    var localNow = (DateTime)this.ViewBag.LocalNow;

    string scheduleDateStr = localNow.ToString("yyyy-MM-dd");
}
@section MainMenu {
    <div class="doctor-card" data-intro="Este é o médico selecionado. Todas as informações nesta página são relativas a este médico. Para trocar o médico, clique em 'Ir para o consultório' e selecione outro médico" data-step="2">
        <div class="doctor-picture">
            <img src="@doctor.ImageUrl" /></div>
        <div class="doctor-info">
            <p class="name">
                <a href="@Url.Action("Index", "DoctorHome")">@doctor.Name</a></p>
            <p class="crm">@doctor.CRM (@doctor.MedicalEntity)</p>
        </div>
    </div>
    <ul class="tabNav">
        <li class="@(controllerName.Equals("doctorhome") ? "youarehere" : "")"><a href="@Url.Action("Index", "DoctorHome")" class="home-icon" data-intro="Esta é a tela de início do médico. Aqui estão todas as informações do médico e a fila de atendimento para hoje" data-step="3">
            Início</a> </li>
        <li class="@(controllerName.Equals("schedule") ? "youarehere" : "")"><a href="@Url.Action("Index", "Schedule")" class="schedule-icon" data-intro="Esta é a agenda do médico. É possível visualizar as consultas agendadas e marcar novas consultas" data-step="4">
            Agenda</a> </li>
        <li class="@(controllerName.Equals("patients") ? "youarehere" : "")"><a href="@Url.Action("Index", "Patients")" class="contact-icon" data-intro="Todas as informações sobre pacientes estão aqui. É possível pesquisar por pacientes e visualizar os históricos. Para realizar uma nova consulta, selecione o paciente desejado e clique nos links de ações na parte inferior da ficha do paciente" data-step="5">
            Prontuário</a> </li>
    </ul>
    <div style="margin-right: 10px; text-align: right;">
        <a class="block-little-link" href="@Url.RouteUrl("Practice", new { action = "Index", controller = "PracticeHome" })">
            Ir para o consultório</a>
    </div>
    @{
        var canAccessConfig = this.CanAccessAction("Index", "Config");
        var canAccessMedicines = this.CanAccessAction("Index", "Medicines");
        var idHrNeeded = canAccessConfig || canAccessMedicines;
    }
    @if (idHrNeeded)
    {
        <hr />
        <ul class="tabNav">
            @if (canAccessMedicines)
            {
                <li class="@(controllerName.Equals("medicines") || controllerName.Equals("laboratories") ? "youarehere" : "")">
                    <a href="@Url.Action("Index", "Medicines")" class="medicines-icon">
                              Medicamentos</a>
                </li>
            }
            @if (canAccessConfig)
            {
                @*<li class="@(configControllerNames.Contains(controllerName) ? "youarehere" : "")">
                    <a href="@Url.Action("Index", "Config")" class="config-icon">Configurações</a>
                </li>*@
                <li class="@(this.IsController("ConfigSchedule") ? "youarehere" : "")">
                    <a href="@Url.Action("Edit", "ConfigSchedule")" class="config-icon">Configurações da agenda</a> 
                </li>
                <li class="@(this.IsAction("Edit", "ConfigDocuments") ? "youarehere" : "")">
                    <a href="@Url.Action("Edit", "ConfigDocuments")" class="config-icon">Configurações de documentos</a> 
                </li>
                <li class="@(this.IsAction("Index", "ModelMedicalCertificates") ? "youarehere" : "")">
                    <a href="@Url.Action("Index", "ModelMedicalCertificates")" class="config-icon">Modelos de atestados</a> 
                </li>
                <li class="@(this.IsAction("Index", "HealthInsurance") ? "youarehere" : "")">
                    <a href="@Url.Action("Index", "HealthInsurance")" class="config-icon">Convênios</a> 
                </li>
            }
        </ul>
    }
}

@section TopActions {
    <input type="text" id="global-search" name="global-search" class="autocomplete" data-intro="Use esta caixa para pesquisar por informações no Cerebello, como pacientes por exemplo. Ao começar a digitar, o sistema vai automaticamente sugerir registros que batem com a pesquisa" data-step="6"/>
    <input type="hidden" id="global-search-hidden" name="global-search-hidden" class="autocomplete" />
    <script type="text/javascript">
        $("#global-search").autocomplete({
            contentUrl: "@Url.Action("LookupEverything", "App")",
            inputHiddenName: "global-search-hidden",
            showDropdownButton: false,            
            ajaxParams: {
                doctorId: @doctor.Id
            },
            change: function(data) {
                if(data)
                    window.location = data.Url;
            },
            columnHeaders: ["Nome", "Tipo"],
            columns: ["Value", "Description"]
        });
        $("#global-search").watermark({ text: "Pesquisar no Cerebello" });
    </script>

    <a id="global-add-new" class="top-bar-menu-button add-new-button" href="#" data-intro="Este botão permite inserir rapidamente informações no Cerebello" data-step="7">Novo</a>
    <a id="global-schedule-new" class="top-bar-menu-button schedule-button" href="#" data-intro="Use este botãõ para marcar rapidamente consultas e compromissos de qualquer tela dentro do perfil do médico" data-step="8">Marcar</a>

    <script type="text/javascript">

        $("#global-add-new").dropdownMenu({
            items: [
                { id: "new-patient", text: "Novo paciente", href: "@Url.Action("Create", "Patients")" },
                { id: "new-medicine", text: "Novo medicamento", href: "@Url.Action("Create", "Medicines")" }
            ]
        });

        $("#global-schedule-new").click(function (e) {
            @if (doctor.IsScheduleConfigured)
            {
            <text>
            e.preventDefault();
            $.modal({
                url: "@Url.Action("Create", "Schedule", new { findNextAvailable = true })",
                title: "Nova consulta",
                data: {
                    date: "@scheduleDateStr",
                    start: "",
                    end: "",
                    doctorId: ""
                },
                width: 480,
                height: 200
            });
            </text>
            }
            else
            { 
            <text>
            window.location.href = "@(Url.Action("MissingConfigurations", "Schedule"))";
            </text>
            }
        });
    </script>
}

@section AdditionalTitleInfo {
    @if (IsSectionDefined("AdditionalTitleInfo"))
    {
        <span class="subtitle">
            @RenderSection("AdditionalTitleInfo")
        </span>
    }
}
@section Scripts {
    @RenderSection("Scripts", false)
}
@section Title {
    @RenderSection("Title", false)
}
@section Styles {
    @RenderSection("Styles", false)
}
@section SideBar {
    @RenderSection("SideBar", false)
}
@RenderBody()
