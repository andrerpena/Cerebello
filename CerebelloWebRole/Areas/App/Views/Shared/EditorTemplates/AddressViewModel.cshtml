@model AddressViewModel
@{
    var editPanel = this.Html.CreateEditPanel();
    editPanel.AddField(m => m.CEP, format: @<text> @Html.EditorFor(model => model.CEP)
    <div>
        <a class="getCepInfo block-little-link" href="#" style="display: inline-block">Obter endereço</a>
        <img class="getCepInfoActivityIndicator" src="/content/images/progress.gif" style="display: none" />
    </div>
    </text>);
    editPanel.AddField(m => m.StateProvince, format:
    @<text> @* there seems to be a BUG regarding DropdownListFors inside editor templates
         and possibly inside collection-editors. This is a workaraound (I'm forcingly
         setting the value).
         If we go into this more often we can investigate a more elegant solution.*@
    @Html.DropDownListFor(model => model.StateProvince, new SelectList(new List<SelectListItem>()
                        {
                            new SelectListItem() { Text = "Acre", Value="AC"},
                            new SelectListItem() { Text = "Alagoas", Value="AL"},
                            new SelectListItem() { Text = "Amapá", Value="AP"},
                            new SelectListItem() { Text = "Amazonas", Value="AM"},
                            new SelectListItem() { Text = "Bahia", Value="BA"},
                            new SelectListItem() { Text = "Ceará", Value="CE"},
                            new SelectListItem() { Text = "Distrito Federal", Value="DF"},
                            new SelectListItem() { Text = "Espírito Santo", Value="ES"},
                            new SelectListItem() { Text = "Goiás", Value="GO"},
                            new SelectListItem() { Text = "Maranhão", Value="MA"},
                            new SelectListItem() { Text = "Mato Grosso", Value="MT"},
                            new SelectListItem() { Text = "Mato Grosso do Sul", Value="MS"},
                            new SelectListItem() { Text = "Minas Gerais", Value="MG"},
                            new SelectListItem() { Text = "Pará", Value="PA"},
                            new SelectListItem() { Text = "Paraiba", Value="PB"},
                            new SelectListItem() { Text = "Paraná", Value="PR"},
                            new SelectListItem() { Text = "Pernambuco", Value="PE"},
                            new SelectListItem() { Text = "Piauí", Value="PI"},
                            new SelectListItem() { Text = "Rio de Janeiro", Value="RJ"},
                            new SelectListItem() { Text = "Rio Grande do Norte", Value="RN"},
                            new SelectListItem() { Text = "Rio Grande do Sul", Value="RS"},
                            new SelectListItem() { Text = "Rondônia", Value="RO"},
                            new SelectListItem() { Text = "Roraima", Value="RR"},
                            new SelectListItem() { Text = "Santa Catarina", Value="SC"},
                            new SelectListItem() { Text = "São Paulo", Value="SP"},
                            new SelectListItem() { Text = "Sergipe", Value="SE"},
                            new SelectListItem() { Text = "Tocantins", Value="TO"}
                        }, "Value", "Text", this.Model != null ? this.Model.StateProvince : null), "")
    </text>);
    editPanel.AddField(m => m.City);
    editPanel.AddField(m => m.Neighborhood);
    editPanel.AddField(m => m.Street);
    editPanel.AddField(m => m.Complement, CerebelloWebRole.Code.Controls.EditPanelFieldSize.Small);
    
}
@editPanel.GetHtml()
<script type="text/javascript">
    (function () {

        var $wrapper = $(".edit-panel-wrapper");
        var $activityIndicator = $(".getCepInfoActivityIndicator", $wrapper);

        // máscaras
        var $cepInput = $("input[name='@(ViewData.TemplateInfo.HtmlFieldPrefix).CEP']", $wrapper);
        $cepInput.mask("99999-999");

        $("a.getCepInfo", $wrapper).bind("click", function (e) {
            e.preventDefault();
            if (!$cepInput.val())
                alert("O CEP precisa estar preenchido");
            else {
                $activityIndicator.show();
                getGetInfo("@Url.Action("GetCepInfo", "Correios")", $cepInput.val(), {
                    success: function(cepInfo) {
                        $("input[name='@(ViewData.TemplateInfo.HtmlFieldPrefix).StateProvince']", $wrapper).val(cepInfo.StateProvince);
                        $("input[name='@(ViewData.TemplateInfo.HtmlFieldPrefix).City']", $wrapper).val(cepInfo.City);
                        $("input[name='@(ViewData.TemplateInfo.HtmlFieldPrefix).Neighborhood']", $wrapper).val(cepInfo.Neighborhood);
                        $("select[name='@(ViewData.TemplateInfo.HtmlFieldPrefix).StateProvince']", $wrapper).val(cepInfo.StateProvince);
                        $("input[name='@(ViewData.TemplateInfo.HtmlFieldPrefix).Street']", $wrapper).val(cepInfo.Street);
                        $activityIndicator.hide();
                    },
                    error: function() {
                        $activityIndicator.hide();
                    }
                });
            }
        });

    })();
</script>
