@model CerebelloWebRole.Areas.App.Models.UserViewModel
@using Cerebello.Model
@using CerebelloWebRole.Code.Extensions
@{
    var title = "Usuário: " + this.Model.FullName;
    this.ViewBag.Title = string.Format("{0} · Cerebello", title);
    this.ViewBag.Watermark = "Pesquisar pelo nome do usuário";
    this.Layout = "~/Areas/App/Views/Shared/_LayoutPractice.cshtml";

    var localNow = (DateTime)this.ViewBag.LocalNow;

    // creating details CardView
    var cardView = Html.CreateCardView();
    cardView.AddField(m => m.UserName);
    cardView.AddField(m => m.FullName, wholeRow: true);
    cardView.AddField(m => m.Gender, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.Gender, typeof(TypeGender))</text>);
    cardView.AddField(m => m.DateOfBirth, @<text>  @(@item.DateOfBirth.ToShortDateString()) (@CerebelloWebRole.Code.DateTimeHelper.GetPersonAgeInWords(@item.DateOfBirth, localNow))</text>, wholeRow: true);
    cardView.AddField(m => m.MaritalStatus, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.Gender, typeof(TypeMaritalStatus))</text>);
    cardView.AddField(m => m.BirthPlace);
    cardView.AddField(m => m.Cpf);
    cardView.AddField(m => m.Profissao);

    // creating details CardView
    var cardViewRoles = Html.CreateCardView();
    cardViewRoles.AddField(m => m.UserRoles);

    // creating details CardView
    var cardViewDoctor = Html.CreateCardView();
    cardViewDoctor.AddField(m => m.MedicCRM);
    cardViewDoctor.AddField(m => m.MedicalSpecialtyName);
    cardViewDoctor.AddField(m => m.MedicalEntityName);
    cardViewDoctor.AddField(m => m.MedicalEntityJurisdiction, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.MedicalEntityJurisdiction, typeof(TypeEstadoBrasileiro))</text>);

    // creating details CardView
    var cardViewAddress = Html.CreateCardView();
    cardViewAddress.AddField(m => m.Address.CEP);
    cardViewAddress.AddField(m => m.Address.StateProvince);
    cardViewAddress.AddField(m => m.Address.City);
    cardViewAddress.AddField(m => m.Address.Neighborhood);
    cardViewAddress.AddField(m => m.Address.Street);
    cardViewAddress.AddField(m => m.Address.Complement);

    // creating details CardView
    var cardViewContact = Html.CreateCardView();
    cardViewContact.AddField(m => m.Email);
    cardViewContact.AddField(m => m.PhoneCell);
    cardViewContact.AddField(m => m.PhoneLand);
}
@section Title {
    @title
}
@section SideBar {

    @if (this.CanAccessAction("Edit"))
    {
        <a href="@Url.Action("Edit", new { id = Model.Id })" class="icon-link icon-link-edit"
           id="edit-user-link">Editar usuário</a>
    }

    @if (this.CanAccessAction("Delete"))
    {
        <a href="#" class="icon-link icon-link-delete" id="delete-user-link">Excluir usuário</a>
    }

    @if (this.ViewBag.IsSelf == true)
    {
        <a href="@Url.Action("ChangePassword", "Users")" class="icon-link icon-reset-password">Alterar senha</a>
    }

    @if (string.IsNullOrWhiteSpace(this.Model.Email) && this.CanAccessAction("ResetPassword"))
    {
        <a href="#" class="icon-link icon-reset-password" id="reset-password-link">Resetar senha</a>
    }

    <a href="@Url.Action("Index", "PracticeHome")" class="icon-link icon-link-home">Consultório</a>

    @if (this.CanAccessAction("Delete"))
    {
        <script type="text/javascript">
            $("#delete-user-link").click(function (e) {
                e.preventDefault();
                $.confirmation(cerebello.res.deleteConfirmation, {
                    objectType: "usuário",
                    objectName: "@this.Model.FullName",
                    url: "@Url.Action("Delete", new { id = this.Model.Id })",
                    success: function (data) {
                        window.location = "@Url.Action("Index", "PracticeHome")";
                    }
                });
            });
        </script>
    }

    @if (string.IsNullOrWhiteSpace(this.Model.Email) && this.CanAccessAction("ResetPassword"))
    {
        <script type="text/javascript">
            $("#reset-password-link").click(function (e) {
                e.preventDefault();
                $.confirmation(cerebello.res.resetPasswordConfirmation, {
                    objectType: "usuário",
                    objectName: "@this.Model.FullName",
                    url: "@Url.Action("ResetPassword", new { id = this.Model.Id })",
                    success: function (data) {
                        window.location = "@Url.Action("Details", new { id = this.Model.Id })";
                    }
                });
            });
        </script>
    }
}

@cardView.GetHtml()

<h2>Funções deste usuário</h2>
@cardViewRoles.GetHtml()

@if (this.Model.IsDoctor)
{
    <h2>Informações do médico</h2>
    @cardViewDoctor.GetHtml()
}

<h2>Endereço</h2>
@cardViewAddress.GetHtml()

<h2>Informações de contato</h2>
@cardViewContact.GetHtml()

