@model CerebelloWebRole.Areas.App.Models.UserViewModel
@using CerebelloWebRole.Code.Extensions
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/App/Views/Shared/_LayoutPractice.cshtml";

    var editPanel = this.Html.CreateEditPanel();

    if (this.ViewBag.IsEditing == false)
    {
        // If Model is null, then the user is being created now,
        // so we allow the user name to be changed.
        editPanel.AddField(m => m.UserName, CerebelloWebRole.Code.Controls.EditPanelFieldSize.Large);
    }
    else if (this.ViewBag.IsEditing == true)
    {
        // If Model is not null, then the user already existed before,
        // we cannot allow the user-name to be edited.
        editPanel.AddField(m => m.UserName, @<text>@Model.UserName</text>);
    }
    else
    {
        throw new Exception("'ViewBag.IsEditing' must be either true or false.");
    }

    editPanel.AddField(m => m.FullName, CerebelloWebRole.Code.Controls.EditPanelFieldSize.Large);
    editPanel.AddField(m => m.Gender, format: @<text>@Html.EnumDropdownListFor(model => model.Gender)</text>);
    editPanel.AddField(m => m.DateOfBirth, CerebelloWebRole.Code.Controls.EditPanelFieldSize.Small);
    editPanel.AddField(m => m.MaritalStatus, format: @<text>@Html.EnumDropdownListFor(model => model.MaritalStatus)</text>);
    editPanel.AddField(m => m.BirthPlace);
    editPanel.AddField(m => m.CPF);
    editPanel.AddField(m => m.Profissao);

    var editPanelRoles = this.Html.CreateEditPanel();
    editPanelRoles.AddField(m => m.IsAdministrador);
    editPanelRoles.AddField(m => m.IsSecretary);
    editPanelRoles.AddField(m => m.IsDoctor);

    var editPanelMedic = this.Html.CreateEditPanel();
    editPanelMedic.AddField(m => m.MedicCRM);

    // These objects must be filled, otherwise obscure exceptions may happen.
    // - ViewBag.MedicalSpecialtyOptions
    // - ViewBag.MedicalEntityOptions
    if (!(this.ViewBag.MedicalSpecialtyOptions is IEnumerable<SelectListItem>))
    {
        throw new Exception("ViewBag.MedicalSpecialtyOptions is not of type 'IEnumerable<SelectListItem>'.");
    }
    if (!(this.ViewBag.MedicalSpecialtyOptions is IEnumerable<SelectListItem>))
    {
        throw new Exception("ViewBag.MedicalEntityOptions is not of type 'IEnumerable<SelectListItem>'.");
    }

    editPanelMedic.AddField(
        m => m.MedicalSpecialty,
        format: @<text>@Html.DropDownListFor(
            m => m.MedicalSpecialty,
            (IEnumerable<SelectListItem>)this.ViewBag.MedicalSpecialtyOptions,
            "")</text>);

    editPanelMedic.AddField(
        m => m.MedicalEntity,
        format: @<text>@Html.DropDownListFor(
            m => m.MedicalEntity,
            (IEnumerable<SelectListItem>)this.ViewBag.MedicalEntityOptions,
            "")</text>);

    editPanelMedic.AddField(m => m.MedicalEntityJurisdiction,
    format: @<text>@Html.EnumDropdownListFor(model => model.MedicalEntityJurisdiction)</text>);
}
@section Scripts {
    <script type="text/javascript">
        $(function() {
            $('#IsDoctor').change(function() {
              if ($(this).is(':checked')) $('#MedicEditPanel').show();
              else $('#MedicEditPanel').hide();
            });
        });
    </script>
}
@section Styles {
    <link rel="Stylesheet" type="text/css" href="/content/styles/app/users_edit.css" />
}
@section Title {
Cadastrar um novo usuário
}
@section SideBar {
    <a href="@Url.Action("index")" class="icon-link icon-link-home">Resumo de usuários</a>
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(false)

    @editPanel.GetHtml()

    if (this.Model == null)
    { 
    @Html.Message(string.Format(
        "A senha padrão deste usuário é {0}. Essa senha será usada somente para fazer o primeiro acesso ao sistema.",
        CerebelloWebRole.Code.Constants.DEFAULT_PASSWORD))
    }
    
    <p class="form-title">
        Funções deste usuário
    </p>
    
    @editPanelRoles.GetHtml()
    
    <div id="MedicEditPanel" @(new MvcHtmlString(Model != null && Model.IsDoctor ? "" : "style=\"display: none\""))>
        <p class="form-title">
            Informações do médico
        </p>
        @editPanelMedic.GetHtml()
    </div>
    
    <p class="form-title">
        @Html.LabelFor(model => model.Address)
    </p>

    @Html.EditorFor(model => model.Address);

    <div class="submit-bar">
        <input type="submit" value="salvar usuário" />
        <span class="separator">ou</span>
        @Html.ActionLink("cancelar", "Index")
    </div>
}