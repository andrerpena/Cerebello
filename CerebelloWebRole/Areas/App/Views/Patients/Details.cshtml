@model PatientViewModel
@using Cerebello.Model
@using CerebelloWebRole.Code.Extensions
@{
    var title = "Paciente: " + this.Model.FullName;
    ViewBag.Title = string.Format("{0} · Cerebello", title);
    ViewBag.Watermark = "Pesquisar pelo nome do paciente";

    var localNow = (DateTime)this.ViewBag.LocalNow;

    var retornoDateStr = localNow.AddDays(30).ToString("yyyy-MM-dd");

    // creating details CardView
    var cardView = Html.CreateCardView();
    cardView.AddField(m => m.FullName);
    cardView.AddField(m => m.Gender, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.Gender, typeof(TypeGender))</text>);
    cardView.AddField(m => m.DateOfBirth, @<text> @(@item.DateOfBirth.ToShortDateString())
                                                    (@CerebelloWebRole.Code.DateTimeHelper.GetPersonAgeInWords(@item.DateOfBirth, localNow))</text>, wholeRow: true);
    cardView.AddField(m => m.Profissao);
    cardView.AddField(m => m.MaritalStatus, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.Gender, typeof(TypeMaritalStatus))</text>);
    cardView.AddField(m => m.Cpf);
    cardView.AddField(m => m.CpfOwner, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.Gender, typeof(TypeCpfOwner))</text>);
    cardView.AddField(m => m.PhoneLand);
    cardView.AddField(m => m.PhoneCell);
    cardView.AddField(m => m.Email, @<text><a href="mailto:@item.Email">@item.Email</a></text>, wholeRow: true);
    cardView.AddField(m => m.Observations, wholeRow: true);

    var futureAppointmentsGrid = this.Html.CreateGrid(this.Model.FutureAppointments);
    futureAppointmentsGrid.AddLinkField(model => model.LocalDateTimeSpelled, "Index", "Schedule", a => new { y = a.LocalDateTime.Year, m = a.LocalDateTime.Month, d = a.LocalDateTime.Day });
}
@section Title {
    @title
}
@section SideBar {
    <ul>
        <li><a href="@Url.Action("Edit", new { id = Model.Id })" class="icon-link icon-link-edit" id="edit-patient-link">Editar paciente</a> <a href="@Url.Action("edit", new { id = Model.Id })"class="icon-link icon-link-delete" id="delete-patient-link">Excluir paciente</a> <a href="@Url.Action("index")" class="icon-link icon-link-home">Resumo de pacientes</a></li>
        <li><a href="@Url.Action("ExportPatientsPdf", "Report", new {patientId = this.Model.Id})" target="_blank" class="icon-link icon-link-import">Exportar Pdf</a> </li>
        <li><a href="@Url.Action("DownloadZipFile", "PatientFiles", new {patientId = this.Model.Id})" class="icon-link icon-link-import">Exportar arquivos em Zip</a> </li>
    </ul>
    <script type="text/javascript">
        $("#delete-patient-link").click(function (e) {
            e.preventDefault();
            $.deleteConfirmation({
                objectType: "paciente",
                objectName: "@this.Model.FullName",
                url: "@Url.Action("Delete", new { id = this.Model.Id })",
                success: function() {
                    alert("Este paciente foi excluído");
                    window.location = "@Url.Action("Index")";
                }
            });
        });
    </script>
}
@section Scripts
{
    @Html.Partial("LockScript", new LockScriptViewModel(LockAccessType.You, elementAction: LockElementActionType.Section, cssClass: "lock-hist"))
}

@cardView.GetHtml()
<h2>@Html.LabelFor(model => model.Address)</h2>
@Html.DisplayFor(model => model.Address)

<h2>Consultas agendadas para o futuro</h2>
<div style="margin-bottom: 10px">
    @futureAppointmentsGrid.GetHtml()
</div>

@if (this.ViewBag.CanAccessMedicalRecords == true)
{
    <h2>Histórico do paciente <span class="lock-hist icon-lock" /></h2>

    <div class="medical-appointments-panel">
        @if (this.Model.Sessions.Any())
        {
            foreach (var session in this.Model.Sessions)
            {
                var relativeSessionDate = DateTimeHelper.ConvertToRelative(
                    session.Date,
                    localNow,
                    DateTimeHelper.RelativeDateOptions.IncludePrefixes
                    | DateTimeHelper.RelativeDateOptions.IncludeSuffixes
                    | DateTimeHelper.RelativeDateOptions.ReplaceToday
                    | DateTimeHelper.RelativeDateOptions.ReplaceYesterdayAndTomorrow);

            <div class="medical-appointment-panel">
                <h3>Consulta do dia @session.Date.ToString("dd/MM/yyyy") (@relativeSessionDate)
                </h3>
                @if (session.AnamneseIds.Count > 0)
                {
                    <p class="subtitle">
                        Anamneses
                    </p>
                    foreach (var anamneseId in session.AnamneseIds)
                    {
                    @Html.Action("Details", "Anamneses", new { id = anamneseId })
                    }
                }
                @if (session.PhysicalExaminationIds.Count > 0)
                {
                    <p class="subtitle">
                        Exames físicos
                    </p>
                    foreach (var physicalExamination in session.PhysicalExaminationIds)
                    {
                    @Html.Action("Details", "PhysicalExamination", new { id = physicalExamination })
                    }
                }
                @if (session.ReceiptIds.Count > 0)
                {
                    <p class="subtitle">
                        Receitas
                    </p>
                    foreach (var receiptId in session.ReceiptIds)
                    {
                    @Html.Action("Details", "Receipts", new { id = receiptId })
                    }
                }
                @if (session.ExaminationRequestIds.Count > 0)
                {
                    <p class="subtitle">
                        Solicitações de exames
                    </p>
                    foreach (var receiptId in session.ExaminationRequestIds)
                    {
                    @Html.Action("Details", "Exams", new { id = receiptId })
                    }
                }
                @if (session.ExaminationResultIds.Count > 0)
                {
                    <p class="subtitle">
                        Resultados de exames
                    </p>
                    foreach (var examResultId in session.ExaminationResultIds)
                    {
                    @Html.Action("Details", "ExamResults", new { id = examResultId })
                    }
                }

                @if (session.DiagnosisIds.Count > 0)
                {
                    <p class="subtitle">
                        Diagnósticos
                    </p>
                    foreach (var diagnosisId in session.DiagnosisIds)
                    {
                    @Html.Action("Details", "Diagnosis", new { id = diagnosisId })
                    }
                }

                @if (session.MedicalCertificateIds.Count > 0)
                {
                    <p class="subtitle">
                        Atestados médicos
                    </p>
                    foreach (var certificateId in session.MedicalCertificateIds)
                    {
                    @Html.Action("Details", "MedicalCertificates", new { id = certificateId })
                    }
                }
                
                @if (session.PatientFiles.Count > 0)
                {
                    <p class="subtitle">
                        Arquivos
                    </p>
                    foreach (var patientFileId in session.PatientFiles)
                    {
                    @Html.Action("Details", "PatientFiles", new { id = patientFileId })
                    }
                }

            </div>
            }
        }
        else
        {
            @Html.Message("O paciente não possui histórico")
        }
        <h2>Nova consulta <span class="lock-hist icon-lock" /></h2>
        <div class="new-medical-appointment-panel-wrapper">
            <div class="new-medical-appointment-panel">
                <!-- anamnese -->
                <div>
                    <a id="new-anamnese" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "anamneses", new { patientId = Model.Id })">Nova anamnese</a>
                    <div id="new-anamnese-wrapper" class="appointment-panel-wrapper">
                    </div>
                </div>
                <!-- physical examination -->
                <div>
                    <a id="new-physicalExamination" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "PhysicalExamination", new { patientId = Model.Id })">Novo exame físico</a>
                    <div id="new-physicalExamination-wrapper" class="appointment-panel-wrapper">
                    </div>
                </div>
                <!-- receipt -->
                <div>
                    <a id="new-receipt" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "receipts", new { patientId = Model.Id })">Nova receita</a>
                    <div id="new-receipt-wrapper" class="appointment-panel-wrapper">
                    </div>
                </div>
                <!-- exam requirement -->
                <div>
                    <a id="new-exam" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "exams", new { patientId = Model.Id })">Nova solicitação de exames</a>
                    <div class="new-exams-wrapper appointment-panel-wrapper">
                    </div>
                </div>
                <!-- exam result -->
                <div>
                    <a id="new-exam-result" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "examresults", new { patientId = Model.Id })">Novo resultado de exame</a>
                    <div class="new-exam-result-wrapper appointment-panel-wrapper">
                    </div>
                </div>
                <!-- diagnosis -->
                <div>
                    <a id="new-diagnosis" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "diagnosis", new { patientId = Model.Id })">Novo diagnóstico</a>
                    <div class="new-diagnosis-wrapper appointment-panel-wrapper">
                    </div>
                </div>
                <!-- medical certificate -->
                <div>
                    <a id="new-medical-certificate" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "medicalcertificates", new { patientId = Model.Id })">Novo atestado médico</a>
                    <div class="medical-certificate-wrapper appointment-panel-wrapper">
                    </div>
                </div>
                <!-- patient files -->
                <div>
                    <a id="new-patientFile" class="icon-link icon-link-plus add-appointment-panel" href="@Url.Action("create", "PatientFiles", new { patientId = Model.Id })">Enviar arquivo</a>
                    <div class="medical-certificate-wrapper appointment-panel-wrapper">
                    </div>
                </div>
                <!-- schedule return -->
                <div>
                    <a href="#" class="icon-link icon-link-reload schedule-appointment">Marcar retorno</a>
                </div>
            </div>
        </div>
        <script type="text/javascript">
            $("a.schedule-appointment").click(function() {
                $.modal({
                    url: "@Url.Action("Create", "Schedule", new { findNextAvailable = true })",
                    title: "Nova consulta",
                    data: {
                        date: "@retornoDateStr",
                        start: "",
                        end: "",
                        doctorId: "",
                        patientId: @(this.Model.Id)
                        },
                    width: 480,
                    height: 200
                });
            });
        </script>
        <script type="text/javascript">
            $("a.add-appointment-panel").click(function(e) {
                e.preventDefault();
                var $this = $(this);
                $this.removeClass("icon-link-plus").addClass("icon-link-loading");
                $.ajax({
                    url: $this.attr("href"),
                    success: function(html) {
                        var $appointmentPanel = $this.siblings(".appointment-panel-wrapper");
                        $appointmentPanel.show();
                        $appointmentPanel.prepend(html);
                        $appointmentPanel.bind("cancel", function() {
                            if ($appointmentPanel.children().length == 0)
                                $appointmentPanel.hide();
                        });
                        $this.removeClass("icon-link-loading").addClass("icon-link-plus");
                    },
                    error: function() {
                        $this.removeClass("icon-link-loading").addClass("icon-link-plus");
                    }
                });
            });
        </script>
    </div>
}
