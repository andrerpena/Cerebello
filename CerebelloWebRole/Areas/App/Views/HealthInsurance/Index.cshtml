@model HealthInsuranceIndexViewModel
@using CerebelloWebRole.Areas.App.Models
@using CerebelloWebRole.Code
@{
    var title =
        this.ViewBag.IsFiltered == true
            ? "Busca por convênios médicos e formas de atendimento particular"
            : "Convênios médicos e formas de atendimento particular";

    this.ViewBag.Title = string.Format("{0} · Cerebello", title);

    var itemsHealthInsurance = this.Model.HealthInsurances.Where(hi => !hi.IsParticular);
    var grid = this.Html.CreateGrid(itemsHealthInsurance, Constants.GRID_PAGE_SIZE);
    grid.AddLinkField(item => item.Name, "Details", item => new { id = item.Id });
    grid.AddField(item => item.IsActive, m => m.IsActive ? "Ativo" : "Inativo", "");
    if (itemsHealthInsurance.Any(item => item.NewAppointmentValue != null))
    {
        grid.AddField(item => item.NewAppointmentValue);
    }
    if (itemsHealthInsurance.Any(item => item.ReturnDaysInterval != null))
    {
        grid.AddField(item => item.ReturnDaysInterval);
    }

    var itemsParticular = this.Model.HealthInsurances.Where(hi => hi.IsParticular);
    var gridParticular = this.Html.CreateGrid(itemsParticular, Constants.GRID_PAGE_SIZE);
    gridParticular.AddLinkField(item => item.Name, "Details", item => new { id = item.Id });
    gridParticular.AddField(item => item.IsActive, m => m.IsActive ? "Ativo" : "Inativo", "");
    if (itemsParticular.Any(item => item.NewAppointmentValue != null))
    {
        gridParticular.AddField(item => item.NewAppointmentValue);
    }
    if (itemsParticular.Any(item => item.ReturnDaysInterval != null))
    {
        gridParticular.AddField(item => item.ReturnDaysInterval);
    }
}
@section Title {
    @title <span class="lock-title icon-lock" />
}
@section Scripts {
    @Html.Partial("LockScript", new LockScriptViewModel(LockScriptType.SelfOrAdminOrOwner, "médico"))
}
@section SideBar {
    <ul>
        <li><a href="@Url.Action("Create", new { isParticular = false })" class="icon-link icon-link-plus">Novo convênio</a> </li>
        <li><a href="@Url.Action("Create", new { isParticular = true })" class="icon-link icon-link-plus">Nova forma de atendimento particular</a> </li>
        <li><a class="icon-link icon-link-home" href="@Url.Action("Index", "Config")">Resumo de configurações</a></li>
    </ul>
}

<div class="widget">
    <h2>Formas de atendimento particular
    </h2>
    @gridParticular.GetHtml()

    <h2 style="margin-top: 3em">Convênios
    </h2>
    @grid.GetHtml()
</div>
