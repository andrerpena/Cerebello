@model CerebelloWebRole.Areas.App.Models.DoctorHomeViewModel
@using Cerebello.Model
@using CerebelloWebRole.Areas.App.Models
@{
    var title = (this.Model.Gender == TypeGender.Male ? "Médico: " : "Médica: ") + this.Model.DoctorName;
    ViewBag.Title = string.Format("{0} · Cerebello", title);
    Layout = "~/Areas/App/Views/Shared/_LayoutDoctor.cshtml";

    var cardView = this.Html.CreateCardView();
    cardView.AddField(m => m.DoctorName, wholeRow: true);
    cardView.AddField(m => m.MedicCrm);
    cardView.AddField(m => m.MedicalSpecialtyName);
    cardView.AddField(m => m.MedicalEntityName);
    cardView.AddField(m => m.MedicalEntityJurisdiction, @<text>@CerebelloWebRole.Code.EnumHelper.GetText(@item.MedicalEntityJurisdiction, typeof(TypeEstadoBrasileiro))</text>);
    
    Func<AppointmentViewModel, string> getCssClass = (vm) =>
        {
            var cssClasses = new List<string>();
            
            if (vm.Status == (int)TypeAppointmentStatus.NotAccomplished)
                cssClasses.Add("not-accomplished");

            if (vm.IsInThePast)
                cssClasses.Add("in-the-past");

            if (vm.IsNow)
                cssClasses.Add("now");

            return string.Join(" ", cssClasses.ToArray());
        };

    var todaysAppointmentGrid = this.Html.CreateGrid(this.Model.TodaysAppointments);
    todaysAppointmentGrid.AddField(model => model.PatientName, @<text><span class="@getCssClass(item)"><a href="@Url.Action("Details", "Patients", new {id = item.PatientId})">@item.PatientName</a></span></text>);
    todaysAppointmentGrid.AddField(model => model.LocalDateTimeSpelled, header:"Horário", format: @<text><span class="@getCssClass(item)"><a href="@Url.Action("Index", "Schedule", new {y = item.LocalDateTime.Year, m = item.LocalDateTime.Month, d = item.LocalDateTime.Day})">@item.LocalDateTimeSpelled</a></span></text>);
    todaysAppointmentGrid.AddField(model => model.HealthInsuranceId, @<text><span class="@getCssClass(item)"><a href="@Url.Action("Details", "HealthInsurance", new {id = item.HealthInsuranceId})">@item.HealthInsuranceName</a></span></text>);
    todaysAppointmentGrid.AddField(model => model.StatusText, @<text><span class="@getCssClass(item)"><a class="status" href="#" item-id="@item.Id">@item.StatusText</a></span></text>);

    var nextGenericAppointments = this.Html.CreateGrid(this.Model.NextGenericAppointments);
    nextGenericAppointments.AddField(model => model.Description, @<text><span class="@getCssClass(item)"><a href="@Url.Action("Index", "Schedule", new { y = item.LocalDateTime.Year, m = item.LocalDateTime.Month, d = item.LocalDateTime.Day })">@item.Description</a></span></text>);
    nextGenericAppointments.AddField(model => model.LocalDateTimeSpelled, header: "Data", format: @<text><span class="@getCssClass(item)"><a href="@Url.Action("Index", "Schedule", new { y = item.LocalDateTime.Year, m = item.LocalDateTime.Month, d = item.LocalDateTime.Day })">@item.LocalDateTimeSpelled</a></span></text>);
}

@section Title {
    @title
}

@section Scripts
{
    <script type="text/javascript">
        $(function () {
            $("a.status").click(function(e) {
                e.preventDefault();

                var $el = $(this);

                window.appointmentModal = $.modal({
                    url: "@Url.Action("Edit", "Schedule")",
                    title: "Editar consulta",
                    data: {
                        id: $el.attr("item-id")
                    },
                    width: 480,
                    height: 200
                });

            });
        })
    </script>
}

@cardView.GetHtml()

<div class="widget">
    <h2>Consultas agendadas para hoje (@this.ViewBag.PracticeLocalDate)
    </h2>
    @todaysAppointmentGrid.GetHtml()
</div>

<div class="widget">
    <h2>Próximos compromissos (Exibindo 5)</h2>
    @nextGenericAppointments.GetHtml()
</div>