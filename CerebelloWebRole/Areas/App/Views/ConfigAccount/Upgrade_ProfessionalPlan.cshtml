@using System.Globalization
@model ChangeContractViewModel
<div class="text-section">
    <h2>Contrato</h2>
    <table>
        <tr><td><a href="@Url.Content("~/Content/Contracts/ProfissionalPlanContract.html")" target="_blank">Visualizar em outra janela do browser</a></td></tr>
        <tr><td><a href="@Url.Content("~/Content/Contracts/Contrato-plano-profissional.pdf")" target="_blank">Download PDF</a></td></tr>
        <tr><td><a href="@Url.Content("~/Content/Contracts/Contrato-plano-profissional.docx")" target="_blank">Download DOCX</a></td></tr>
        <tr><td><a href="@Url.Content("~/Content/Contracts/Contrato-plano-profissional.rtf")" target="_blank">Download RTF</a></td></tr>
    </table>

    <table>
        <tr>
            <th>@Html.LabelForRequired(vm => vm.AcceptedByUser)</th>
            <td>@Html.CheckBoxFor(vm => vm.AcceptedByUser)</td>
        </tr>
    </table>
</div>

<div class="text-section">
    <h2 style="margin-bottom: 1em;">@Html.FieldLabelText(m => m.PaymentMethod)</h2>
    <div class="text-description">
        <input type="hidden" name="@Html.FieldName(vm => vm.PaymentMethod)" value="EMAIL"/>

        <strong>Cobrança por e-mail:</strong>
        Será enviada uma cobraça por e-mail com o título <strong style="white-space: nowrap">Fatura Cerebello</strong>.
        Essa fatura pode ser paga com cartão de crédito, ou então usando saldo disponível em uma conta do PayPal.
        Sua conta será atualizada para o plano profissional, assim que confirmarmos o seu pagamento.
        Por conta do tempo de processamento do pagamento, pedimos um prazo de 2 dias úteis após o pagamento para a ativação
        do novo plano.
    </div>
</div>

@{
    var ptBr = CultureInfo.GetCultureInfo("pt-BR");
    var invariant = CultureInfo.InvariantCulture;
    Func<string, string, bool> csii = (a, b) => StringComparer.InvariantCultureIgnoreCase.Compare(a, b) == 0;
}

<div class="text-section">
    <h2 style="margin-bottom: 1em;">@Html.FieldLabelText(m => m.PaymentModelName)</h2>
    <div class="text-description">
        <p>
            A assinatura será cobrada com a frequência selecionada abaixo,
                sempre de forma adiantada. Existem descontos para pagamento trimestral, semestral ou anual, como indicado na tabela abaixo.
        </p>
        <script type="text/javascript">
            $(function () {
                $("table.frequency > tbody > tr").click(function () {
                    $("table.frequency > tbody > tr.selected").toggleClass("selected");
                    $(this).toggleClass("selected");
                    $("table.frequency > tbody > tr input:radio[value='" + $(this).attr("model-name") + "']").attr("checked", true);

                    var rate = 1 - parseFloat($(this).attr("discount")) / 100;
                    var mul = parseFloat($(this).attr("months"));
                    $("table.doctors > tbody > tr > td.price").each(function (index) {
                        $(this).text("R$ " + (rate * parseFloat($(this).attr("price")) * mul).toFixed(2).replace('.', ','));
                    });
                    $("table.doctors > tbody > tr input:radio").attr("discount", false);

                    UpdateSummary();
                });

                // loading value, if any already present (e.g. when back/forward browser button is used)
                if ($("table.frequency > tbody > tr input:radio:checked")) {
                    $("table.frequency > tbody > tr input:radio:checked").trigger("click");
                }
            });
        </script>
        <table class="frequency prices">
            <thead>
                <tr>
                    <th></th>
                    <th>Desconto</th>
                    <th class="expand">Valor</th>
                    <th class="expand">Frequência</th>
                    <th class="expand irrelevant">Equivalente mensal</th>
                    <th class="expand">Economia</th>
                </tr>
            </thead>
            <tr model-name="MONTH" class="enabled @(csii(this.Model.PaymentModelName, "MONTH") ? "selected" : "")" discount="0" months="1" price="@(Bus.Pro.PRICE_MONTH.ToString("0.00", invariant))">
                <td>
                    <input type="radio" name="@Html.FieldName(vm => vm.PaymentModelName)" value="MONTH" @(csii(this.Model.PaymentModelName, "MONTH") ? "checked='checked'" : "")/></td>
                <td class="irrelevant">0%</td>
                <td>@(Bus.Pro.PRICE_MONTH.ToString("R$ 0.00", ptBr))</td>
                <td>mensal</td>
                <td class="irrelevant">@(Bus.Pro.PRICE_MONTH.ToString("R$ 0.00", ptBr))</td>
                <td class="irrelevant">R$ 0,00</td>
            </tr>

            <tr model-name="3-MONTHS" class="enabled @(csii(this.Model.PaymentModelName, "3-MONTHS") ? "selected" : "")" discount="@(Bus.Pro.DISCOUNT_QUARTER)" months="3" price="@(Bus.Pro.PRICE_QUARTER.ToString("0.00", invariant))">
                <td>
                    <input type="radio" name="@Html.FieldName(vm => vm.PaymentModelName)" value="3-MONTHS" @(csii(this.Model.PaymentModelName, "3-MONTHS") ? "checked='checked'" : "")/></td>
                <td>@(Bus.Pro.DISCOUNT_QUARTER)%</td>
                <td>@(Bus.Pro.PRICE_QUARTER.ToString("R$ 0.00", ptBr))</td>
                <td>trimestral</td>
                <td class="irrelevant">@((Bus.Pro.PRICE_QUARTER / 3).ToString("R$ 0.00", ptBr))</td>
                <td>@((Bus.Pro.PRICE_MONTH * 3 - Bus.Pro.PRICE_QUARTER).ToString("R$ 0.00", ptBr))</td>
            </tr>

            <tr model-name="6-MONTHS" class="enabled @(csii(this.Model.PaymentModelName, "6-MONTHS") ? "selected" : "")" discount="@(Bus.Pro.DISCOUNT_SEMESTER)" months="6" price="@(Bus.Pro.PRICE_SEMESTER.ToString("0.00", invariant))">
                <td>
                    <input type="radio" name="@Html.FieldName(vm => vm.PaymentModelName)" value="6-MONTHS" @(csii(this.Model.PaymentModelName, "6-MONTHS") ? "checked='checked'" : "")/></td>
                <td>@(Bus.Pro.DISCOUNT_SEMESTER)%</td>
                <td>@(Bus.Pro.PRICE_SEMESTER.ToString("R$ 0.00", ptBr))</td>
                <td>semestral</td>
                <td class="irrelevant">@((Bus.Pro.PRICE_SEMESTER / 6).ToString("R$ 0.00", ptBr))</td>
                <td>@((Bus.Pro.PRICE_MONTH * 6 - Bus.Pro.PRICE_SEMESTER).ToString("R$ 0.00", ptBr))</td>
            </tr>

            <tr model-name="12-MONTHS" class="important enabled @(csii(this.Model.PaymentModelName, "12-MONTHS") ? "selected" : "")" discount="@(Bus.Pro.DISCOUNT_YEAR)" months="12" price="@(Bus.Pro.PRICE_YEAR.ToString("0.00", invariant))">
                <td>
                    <input type="radio" name="@Html.FieldName(vm => vm.PaymentModelName)" value="12-MONTHS" @(csii(this.Model.PaymentModelName, "12-MONTHS") ? "checked='checked'" : "")/></td>
                <td>@(Bus.Pro.DISCOUNT_YEAR)%</td>
                <td>@(Bus.Pro.PRICE_YEAR.ToString("R$ 0.00", ptBr))</td>
                <td>anual</td>
                <td class="irrelevant">@((Bus.Pro.PRICE_YEAR / 12).ToString("R$ 0.00", ptBr))</td>
                <td>@((Bus.Pro.PRICE_MONTH * 12 - Bus.Pro.PRICE_YEAR).ToString("R$ 0.00", ptBr))</td>
            </tr>
        </table>
    </div>
</div>

<div class="text-section">
    <h2 style="margin-bottom: 1em;">@Html.FieldLabelText(m => m.DoctorCount)</h2>
    <div class="text-description">
        <p>
            O preço do plano profissional varia de acordo com o tamanho de seu consultório ou clínica.
                Por esta razão, você deve indicar quantos médicos serão cadastrados.
                O desconto dado no item anterior se aplica aos valores mostrados na tabela abaixo.
                @if (this.Model.CurrentDoctorsCount == 0)
                {
                    @:Atualmente <strong class="info">não existem médicos</strong> cadastrado em sua conta.
                }
                else if (this.Model.CurrentDoctorsCount == 1)
                {
                    @:Atualmente existe <strong class="info">1 médico</strong> cadastrado em sua conta.
                }
                else
                {
                    @:Atualmente existem <strong class="info">@Model.CurrentDoctorsCount médicos</strong> cadastrados em sua conta.
                }
        </p>
        <script type="text/javascript">
            $(function () {
                $("table.doctors > tbody > tr.disabled input:radio").attr("disabled", true);

                $("table.doctors > tbody > tr.enabled").click(function () {
                    $("table.doctors > tbody > tr.selected").toggleClass("selected");
                    $(this).toggleClass("selected");
                    $("table.doctors > tbody > tr input:radio[value='" + $(this).attr("value") + "']").attr("checked", true);

                    UpdateSummary();
                });

                // loading value, if any already present (e.g. when back/forward browser button is used)
                if ($("table.doctors > tbody > tr.enabled input:radio:checked")) {
                    $("table.doctors > tbody > tr.enabled input:radio:checked").trigger("click");
                }
            });
        </script>
        <table class="doctors prices">
            <thead>
                <tr>
                    <th></th>
                    <th class="expand">Tamanho</th>
                    <th class="expand">Valor adicional</th>
                </tr>
            </thead>
            <script type="text/javascript">
                var unitPrice = @Bus.Pro.DOCTOR_PRICE;
                var integ = function (x, n) { return Math.pow(n, x) / Math.log(n); };
                var integ0to = function (x, n) { return (integ(x, n) - integ(0, n)); };
                var priceFactor = function (x) { return x * (1.0 - 0.1 * integ0to((x - 1) / 3.0, 0.75)); };
                var price = function (extraDoctors) { return Math.round(priceFactor(extraDoctors) * unitPrice * 100) / 100; };
            </script>
            @{
                var unitPrice = Bus.Pro.DOCTOR_PRICE;
                Func<double, double, double> integ = (x, n) => Math.Pow(n, x) / Math.Log(n);
                Func<double, double, double> integ0to = (x, n) => (integ(x, n) - integ(0, n));
                Func<double, double> priceFactor = x => x * (1.0 - 0.1 * integ0to((x - 1) / 3.0, 0.75));
                Func<double, double> price = (extraDoctors) => Math.Round(priceFactor(extraDoctors) * unitPrice * 100) / 100;

                var sizes = new[] { 2, 3, 4, 6, 8, 10, 12, 15 };
            }
            <tr value="1" class="@(this.Model.CurrentDoctorsCount <= 1 ? "enabled" : "disabled") @(this.Model.DoctorCount == 1 ? "selected" : "")">
                <td>
                    <input type="radio" name="@Html.FieldName(vm => vm.DoctorCount)" value="1" @(this.Model.DoctorCount == 1 ? "checked='checked'" : "")/></td>
                <td class="label">somente 1 médico</td>
                <td class="irrelevant price" price="0">R$ 0,00</td>
            </tr>
            @{ int prev = 1; }
            @foreach (var size in sizes)
            {
                <tr value="@size" class="@(this.Model.CurrentDoctorsCount <= size ? "enabled" : "disabled") @(this.Model.DoctorCount == size ? "selected" : "")">
                    <td>
                        <input type="radio" name="@Html.FieldName(vm => vm.DoctorCount)" value="@size" @(this.Model.DoctorCount == size ? "checked='checked'" : "")/></td>
                    <td class="label">@(prev < size - 1 ? "até " : "")@size médicos</td>
                    <td class="price" price="@(price(size - 1).ToString("0"))">R$ @(price(size - 1).ToString("0")),00</td>
                </tr>
                prev = size;
            }
        </table>
        <p>
            Se você deseja cadastrar mais de @sizes.Max() médicos em seu consultório ou clínica,
                por favor entre em contato conosco.
        </p>
    </div>
</div>

<div class="text-section billing-calendar-wrapper">
    <h2 style="margin-bottom: 1em;">@Html.FieldLabelText(m => m.InvoceDueDayOfMonth)</h2>
    <div class="text-description">
        <div class="billing-calendar">
            <script type="text/javascript">
                $(function () {
                    var $invoideDueDay = $("#@Html.FieldName(m => m.InvoceDueDayOfMonth)");

                        $(".days-of-month td.enabled").click(function () {
                            $(".days-of-month td.selected").toggleClass("selected");
                            $(this).toggleClass("selected");
                            $invoideDueDay.val($(this).attr("val"));

                            UpdateSummary();
                        });

                        // loading value, if any already present (e.g. when back/forward browser button is used)
                        if ($invoideDueDay.val() != "") {
                            $(".days-of-month td[val='" + $invoideDueDay.val() + "']").trigger("click");
                        }
                    });
            </script>
            <input type="hidden" id="@Html.FieldName(m => m.InvoceDueDayOfMonth)" name="@Html.FieldName(m => m.InvoceDueDayOfMonth)" value="@this.Model.InvoceDueDayOfMonth"/>
            <table class="days-of-month ui-datepicker-calendar">
                @for (int line = 0; line < 5; line++)
                {
                    <tr>
                        @for (int column = 0; column < 7; column++)
                        {
                            var day = line * 7 + column;
                            <td class="@(day < 31 ? "enabled" : "disabled") @(day == this.Model.InvoceDueDayOfMonth ? "selected" : "")" val="@(day + 1)">
                                @if (day < 31)
                                {
                                    @:@(day + 1)
                                    }
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
        <div class="billing-calendar-description">
            <p>
                A assinatura será cobrada com vencimento no dia indicado do mês.
                    Assim você pode escolher o melhor dia para pagar sua fatura.
                    A fatura será emitida com antecedência em relação ao vencimento, de no mínimo 10 dias,
                    dando o tempo necessário para o pagamento ser efetuado.
            </p>
            <p>
                Nota: se o mês não possuir o dia selecionado, então será usado o último dia deste mês.
            </p>
        </div>

    </div>
</div>

<div class="text-section">
    <h2 style="margin-bottom: 1em;">Resumo</h2>
    <div class="text-description">
        <script type="text/javascript">
            function UpdateSummary() {
                var $base = $("table.frequency > tbody > tr.selected");
                var $doctors = $("table.doctors > tbody > tr.selected");

                var rate = 1 - parseFloat($base.attr("discount")) / 100;

                var basePrice = parseFloat($base.attr("price"));
                var months = parseFloat($base.attr("months"));

                var basePriceMonth = parseFloat("@(Bus.Pro.PRICE_MONTH.ToString("0.00", invariant))");
                var basePriceMonthDisc = basePrice / months;
                var baseSaved = basePriceMonth * months - basePrice;

                var doctorsPriceMonth = parseFloat($("td.price", $doctors).attr("price"));

                var doctorsPriceMonthDisc = doctorsPriceMonth * rate;
                var doctorsPrice = doctorsPriceMonthDisc * months;
                var doctorsSaved = doctorsPriceMonth * months - doctorsPrice;

                var totalPriceMonthDisc = doctorsPriceMonthDisc + basePriceMonthDisc;
                var totalPrice = doctorsPrice + basePrice;
                var totalSaved = doctorsSaved + baseSaved;

                var invoiceDueDay = parseFloat($("#@Html.FieldName(m => m.InvoceDueDayOfMonth)").val());

                if (!isNaN(basePrice) && !isNaN(doctorsPrice) && !isNaN(invoiceDueDay)) {
                    $(".summary-toggle").toggle().toggleClass("summary-toggle");

                    $(".summary-discount").text($base.attr("discount") + "%");
                    $(".summary-frequency").text({ "1": "mensal", "3": "trimestral", "6": "semestral", "12": "anual" }["" + months]);

                    $(".summary-doctors-label").text($("td.label", $doctors).text());
                    $(".summary-doctors-count").text($doctors.attr("value") == "1" ? "apenas 1" : "até " + $doctors.attr("value"));

                    $("#summary-invoice-due-day").text("dia " + invoiceDueDay);
                    if (invoiceDueDay > 28) $("#summary-invoice-29plus").show();
                    else $("#summary-invoice-29plus").hide();

                    $("#summary-base-price").text("R$ " + basePrice.toFixed(2).replace('.', ','));
                    $("#summary-base-price-month").text("R$ " + basePriceMonthDisc.toFixed(2).replace('.', ','));
                    $("#summary-base-saved").text("R$ " + baseSaved.toFixed(2).replace('.', ','));

                    $("#summary-doctors-price").text("R$ " + doctorsPrice.toFixed(2).replace('.', ','));
                    $("#summary-doctors-price-month").text("R$ " + doctorsPriceMonthDisc.toFixed(2).replace('.', ','));
                    $("#summary-doctors-saved").text("R$ " + doctorsSaved.toFixed(2).replace('.', ','));

                    $(".summary-total-price").text("R$ " + totalPrice.toFixed(2).replace('.', ','));
                                            @*note: this value must have comma as decimal separator because web.config culture is set as 'pt-BR'*@
                    $("#@Html.FieldName(vm => vm.FinalValue)").val(totalPrice.toFixed(2).replace('.', ','));
                    $("#summary-total-price-month").text("R$ " + totalPriceMonthDisc.toFixed(2).replace('.', ','));
                    $("#summary-total-saved").text("R$ " + totalSaved.toFixed(2).replace('.', ','));
                }
            }
        </script>
        <div class="summary-toggle">
            As informações ainda estão incompletas. Por favor, preencha todas as informações para poder ver o resumo
            e então poder prosseguir com o upgrade da sua conta.
        </div>
        <div style="display: none" class="summary-toggle">
            <ul class="summary">
                <li>Cerebello - <strong class="info">Plano Profissional</strong></li>
                <li>Cobrança do <strong class="info">PayPal</strong> por <strong class="info">e-mail</strong></li>
                <li>Frequência de pagamento <strong class="summary-frequency info">-</strong>
                    com <strong class="summary-discount info">?%</strong> de desconto
                </li>
                <li>Dimensionado para <strong class="summary-doctors-label info">- médicos</strong></li>
                <li>Fatura vence no <strong id="summary-invoice-due-day" class="info">dia -</strong>
                    <span id="summary-invoice-29plus" style="display: none">, ou no último dia do mês caso não exista este dia</span></li>
            </ul>
            <table class="prices summary">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Valor com desconto</th>
                        <th class="irrelevant">Equivalente mensal</th>
                        <th>Economia (<span class="summary-discount">?%</span>)</th>
                    </tr>
                </thead>
                <tr class="enabled selected">
                    <td style="background: white; color: black;">Plano Profissional</td>
                    <td id="summary-base-price">R$ -</td>
                    <td id="summary-base-price-month" class="irrelevant">R$ -</td>
                    <td id="summary-base-saved">R$ -</td>
                </tr>
                <tr class="enabled selected">
                    <td style="background: white; color: black;">Médicos (<span class="summary-doctors-count">?%</span>)</td>
                    <td id="summary-doctors-price">R$ -</td>
                    <td id="summary-doctors-price-month" class="irrelevant">R$ -</td>
                    <td id="summary-doctors-saved">R$ -</td>
                </tr>
                <tr class="enabled selected important">
                    <td style="background: white; color: black;">Total</td>
                    <td class="important summary-total-price">R$ -</td>
                    <td id="summary-total-price-month" class="irrelevant">R$ -</td>
                    <td id="summary-total-saved">R$ -</td>
                </tr>
                <tr>
                    <td colspan="4">
                        <div style="text-align: right">
                            Valor final:
                            <span style="font-size: 2em; font-weight: bold; line-height: 1em;" class="summary-total-price">R$ -
                            </span>
                            <input type="hidden" id="@Html.FieldName(vm => vm.FinalValue)" name="@Html.FieldName(vm => vm.FinalValue)" value=""/>
                        </div>
                        <div style="text-align: right">
                            <span style="font-size: 1.3em; font-weight: bold" class="summary-frequency">-
                            </span>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>
