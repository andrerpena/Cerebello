@model PatientFilesGroupViewModel
@using System.Diagnostics
@using CerebelloWebRole.Areas.App.Controllers
@using CerebelloWebRole.Code.Controls
@{
    this.Layout = null;
    
    Debug.Assert(this.Model != null, "this.Model != null");
    
    var patientFileId = this.Model.Id == null ?
        string.Format("new-{0}", this.Model.NewGuid) :
        string.Format("edit-{1}-{0}", this.Model.NewGuid, this.Model.Id);
    var fileuploadId = "fileupload-" + patientFileId;
    var panelId = "patientFile-" + patientFileId;
    var tag = "temp-" + patientFileId;

    var dbUserId = (int)this.ViewBag.UserInfo.Id;
    var containerName = string.Format(@"patient-files-{0}", dbUserId);
    var fileNamePrefix = string.Format("patient-{0}\\", this.Model.PatientId);
    var fullStoragePath = string.Format("{0}\\{1}", containerName, fileNamePrefix);
    
    string prefix;

    var filesStatusGetter = (PatientFilesController.FilesStatusGetter)this.ViewBag.FilesStatusGetter;
}
<div class="appointment-panel prevent-nav" id="@panelId">
    @using (this.Html.BeginForm(null, null, FormMethod.Post, new { id = fileuploadId, enctype = "multipart/form-data" }))
    {
        using (this.Html.BeginScope("PatientFilesGroups"))
        {
            prefix = this.ViewData.TemplateInfo.HtmlFieldPrefix;
            
            @this.Html.ValidationSummary(false)
            @this.Html.HiddenFor(model => model.PatientId)
            @this.Html.HiddenFor(model => model.Id)

            var editPanel = this.Html.CreateEditPanel();
            editPanel.AddField(m => m.Title, EditPanelFieldSize.Large);
            editPanel.AddField(m => m.Notes, this.Html.TextAreaFor, EditPanelFieldSize.Large);
            editPanel.AddField(m => m.FileGroupDate, EditPanelFieldSize.Large);
            editPanel.AddField(m => m.ReceiveDate, EditPanelFieldSize.Large);
            @:@editPanel.GetHtml()
            
            if (this.Model.Id == null)
            {
                @:@this.Html.HiddenFor(model => model.NewGuid)
            }
        
            <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
            <div class="row fileupload-buttonbar">
                <div>
                    <!-- The fileinput-button span is used to style the file input field as button -->
                    <span class="btn btn-success fileinput-button nowrap"><span class="nowrap">Adicionar arquivos</span><input type="file" name="files[]" multiple="multiple" /></span> &nbsp;|&nbsp;
                    @*<a class="btn btn-warning cancel nowrap" href="#">Cancelar uploads</a> &nbsp;|&nbsp;*@
                    <a class="btn btn-danger delete nowrap" href="#">Excluir selecionados</a> &nbsp;|&nbsp;
                    <a class="btn nowrap select-all" href="#">Selecionar todos</a> &nbsp;|&nbsp;
                    <a class="btn nowrap unselect-all" href="#">Desselecionar todos</a>
                </div>
                <!-- The global progress information -->
                <div class="fileupload-progress fade">
                    <!-- The global progress bar -->
                    <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                        <!-- The extended global progress information -->
                        <div class="progress-extended no-user-select">&nbsp;</div>
                        <!-- The green bar -->
                        <div class="bar" style="width: 0%;"></div>
                    </div>
                </div>
            </div>
            <!-- The loading indicator is shown during file processing -->
            <div class="fileupload-loading"></div>
            <!-- The table listing the files available for upload/download -->
            <div role="presentation" class="table table-striped dropzone">
                <div class="drophere fade"><div><div>Solte os arquivos aqui</div></div></div>
                <div id="gallery-@patientFileId" class="files" data-toggle="modal-gallery" data-target="#modal-gallery">
                </div>
            </div>
            
            <div class="submit-bar">
                <input type="submit" value="salvar arquivos" />
                <span class="separator">ou</span>
                <a href="#" class="cancel nav-away">cancelar</a>
            </div>
        }
    }
    <script type="text/javascript" src="@this.Url.Content("~/Scripts/App/Pages/patient-files-edit.js")"></script>
    <script type="text/javascript">
        PatientFilesEdit({
            PanelId: "@panelId",
            FileUploadId: "@fileuploadId",
            FileUploadUrl: "@this.Html.Raw(this.Url.Action("Index", "TempFile", new { area = "App", prefix, location = fullStoragePath, tag }))",
            FileUploadItems: @(this.Html.Raw(Json.Encode(new { files = this.Model.Files.Select(f => filesStatusGetter(f, prefix)) }))),
            DeleteTempFilesUrl: "@this.Html.Raw(this.Url.Action("DeleteTempFiles", "TempFile", new { area = "App", location = fullStoragePath, tag }))",
            DetailsUrl: "@(this.Html.Raw(this.Url.Action("Details", new { id = this.Model.Id })))",
            IsEditing: @(this.Model.Id != null ? "true" : "false")
        });
    </script>
</div>
