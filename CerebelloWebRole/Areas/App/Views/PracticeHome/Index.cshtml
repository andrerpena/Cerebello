@using Cerebello.Model
@using CerebelloWebRole.Code
@using CerebelloWebRole.Code.Helpers
@using CerebelloWebRole.Models
@model CerebelloWebRole.Areas.App.Models.PracticeHomeControllerViewModel
@{
    ViewBag.Title = "Meu consultório médico · Cerebello";
    Layout = "~/Areas/App/Views/Shared/_LayoutPractice.cshtml";

    // creating details CardView
    var cardView = this.Html.CreateCardView();
    cardView.AddField(m => m.PracticeName, wholeRow: true);
    cardView.AddField(m => m.PracticeTimeZone,
    @<text>@EnumHelper.GetText(@item.PracticeTimeZone, typeof(TypeTimeZone))</text>,
        wholeRow: true);
    cardView.AddField(m => m.PhoneMain);
    cardView.AddField(m => m.PhoneAlt);
    cardView.AddField(m => m.Pabx);
    cardView.AddField(m => m.Email, wholeRow: true);
    cardView.AddField(m => m.SiteUrl, wholeRow: true);

    var doctorsGrid = this.Html.CreateGrid(this.Model.Doctors);
    doctorsGrid.AddField(model => model.Name, @<text><a href="@Url.Action("Index", "DoctorHome", new { doctor = item.UrlIdentifier })" class="cell-icon" style="background-image: url('@item.ImageUrl')">@item.Name</a></text>, cssClass: "icon-link-td");
    doctorsGrid.AddField(model => model.MedicalSpecialty);
    doctorsGrid.AddField(model => model.CRM, @<text>@item.CRM (@item.MedicalEntity)</text>);

    var usersGrid = this.Html.CreateGrid(this.Model.Users);
    usersGrid.AddField(model => model.FullName, @<text><a href="@Url.Action("Details", "Users", new { id = item.Id })" class="cell-icon" style="background-image: url('@item.ImageUrl')">@item.FullName</a></text>, cssClass: "icon-link-td");
    usersGrid.AddField(model => model.UserRoles);
}
@section Title {
Meu consultório médico
}

@section Scripts {
    <script src="@Url.Content("~/Scripts/App/Pages/practice.js")" type="text/javascript"></script>
}

@section SideBar {
    @if (this.CanAccessAction("Edit"))
    {
        <a href="@Url.Action("Edit")" class="icon-link icon-link-home" data-intro="Antes de começar é muito importante completar as informações do consultório. Aqui é possível alterar o nome, fuso horário, telefone e outras informações" data-step="4">Editar consultório</a>
    }
    @if (this.CanAccessAction("Create", "Users"))
    {
        <a href="@Url.Action("Create", "Users")" class="icon-link icon-link-plus" data-intro="Aqui é possível adicionar outros usuários como secretárias" data-step="5">Novo usuário</a>
    }
    <hr />
    <a href="#" class="icon-link icon-link-help" onclick="introJs().start(); return false;">Introdução interativa</a>
    <a href="@Url.Action("ManagingUsers", "HomeDocs", new { area = "Docs" })" class="icon-link icon-link-help" target="_blank">Ajuda</a>
}

@cardView.GetHtml()
<h2>
    @Html.LabelFor(model => model.Address)
</h2>
@Html.DisplayFor(model => model.Address)

<div data-intro="Para começar a utilizar o software, é necessário escolher um médico. Dentro do perfil do médico estão informações importantes como a agenda e os prontuários" data-step="6">
    <h2>Médicos do consultório
    </h2>
    @doctorsGrid.GetHtml()
</div>

<h2 style="margin-top: 30px;">Usuários do consultório
</h2>
@usersGrid.GetHtml()

