@using System.ComponentModel
@using CerebelloWebRole.Code.Access

@helper Icon(string cssClass = "lock-title"){
    <span class="@cssClass icon-lock" />
}

@helper Script(
            LockAccessType accessType,
            [Localizable(true)] string selfText = null,
            LockElementActionType elementAction = LockElementActionType.ScreenAccess,
            string cssClass = "lock-title",
            [Localizable(true)] string notes = null)
{
    var dicItems = new Dictionary<string, string>();

    if ((accessType & LockAccessType.You) != 0)
    {
        dicItems["you"] = accessType == LockAccessType.You ?
            "Somente você" :
            "Você";
    }

    if ((accessType & LockAccessType.Self) != 0)
    {
        if (string.IsNullOrWhiteSpace(selfText))
        {
            throw new Exception("SelfText must have a value, when Self flag is used.");
        }

        dicItems["self"] =
            accessType == LockAccessType.Self ?
            string.Format("Somente o próprio {0}", selfText) :
            string.Format("O próprio {0}", selfText);
    }

    if ((accessType & LockAccessType.Admin) != 0)
    {
        dicItems["administrators"] =
            accessType == LockAccessType.Admin ?
            "Somente administradores" :
            "Administradores";
    }

    if ((accessType & LockAccessType.Owner) != 0)
    {
        dicItems["owner"] =
            accessType == LockAccessType.Owner ?
            "Somente o proprietário da conta do consultório" :
            "O proprietário da conta do consultório";
    }

    string lockElementType;
    switch (elementAction)
    {
        case LockElementActionType.Generic:
            lockElementType = "acessar isto";
            break;
        case LockElementActionType.SoftwareAreaAccess:
            lockElementType = "acessar esta área do software";
            break;
        case LockElementActionType.ScreenAccess:
            lockElementType = "acessar esta tela";
            break;
        case LockElementActionType.Section:
            lockElementType = "ver esta seção";
            break;
        case LockElementActionType.Field:
            lockElementType = "var este campo";
            break;
        case LockElementActionType.FieldEdit:
            lockElementType = "editar este campo";
            break;
        case LockElementActionType.SectionEdit:
            lockElementType = "editar esta seção";
            break;
        default:
            lockElementType = "isto";
            break;
    }
    <script type="text/javascript">
        $(function () {
            $(".@(new HtmlString(cssClass))").dropdownMenu({
                offsetX: -34,
                offsetY: 10,
                items: [
                    { id: "title", text: "Quem pode @(new HtmlString(lockElementType))", cssClass: "header" }
                @foreach (var eachKV in dicItems)
                {
                    @:, { id: "@(new HtmlString(eachKV.Key))", text: "@(new HtmlString(eachKV.Value))" }
                }
                @if (!string.IsNullOrWhiteSpace(notes))
                {
                    @:, { id: "notes", text: "@(new HtmlString(notes))", cssClass: "notes" }
                }
            ]
            });
        });
    </script>
}
